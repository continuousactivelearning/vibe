name: Backend CI/CD

on:
  push:
    branches: [master, staging, test-cicd]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend-all.yml'
  workflow_dispatch:

# Set permissions for the workflow
permissions:
  contents: write  # Required for creating tags
  packages: write  # Required for pushing to Docker Hub
  id-token: write  # Required for OIDC authentication

env:
  NODE_VERSION: '22'
  DOCKER_IMAGE: vibe-backend
  GCP_REGION: asia-south2
  GCP_SERVICE: vibe-backend

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.versioning.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Versioning
        id: versioning
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          tag_prefix: "backend-v"
          default_bump: "patch"
          fetch_all_tags: true
          release_branches: "master,staging,test-cicd"
          create_annotated_tag: true

  build:
    name: Build and Push
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ needs.versioning.outputs.new_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

  deploy_staging:
    name: Deploy to Staging
    needs: [versioning, build]
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Firebase (staging)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: 'staging'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          target: 'staging'

  deploy_production:
    name: Deploy to Production
    needs: [versioning, build, deploy_staging]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Firebase (production)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'

"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6425],{9526:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"cli/intro","title":"Using the CLI","description":"This guide provides an overview of how to use the ViBe Command Line Interface (CLI) effectively.","source":"@site/docs/cli/intro.md","sourceDirName":"cli","slug":"/cli/intro","permalink":"/vibe/docs/cli/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/continuousactivelearning/vibe/edit/main/docs/docs/cli/intro.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Setting Up MCP Servers for OpenAPI endpoints","permalink":"/vibe/docs/mcp-server/setting-up"}}');var s=n(7968),r=n(9880);const o={},c="Using the CLI",a={},l=[{value:"\u2699\ufe0f Installation",id:"\ufe0f-installation",level:2},{value:"\ud83d\ude80 Available Commands",id:"-available-commands",level:2},{value:"<code>vibe setup</code>",id:"vibe-setup",level:3},{value:"<code>vibe start &lt;service1&gt; &lt;service2&gt; ...</code>",id:"vibe-start-service1-service2-",level:3},{value:"<code>vibe test</code>",id:"vibe-test",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"using-the-cli",children:"Using the CLI"})}),"\n",(0,s.jsx)(t.p,{children:"This guide provides an overview of how to use the ViBe Command Line Interface (CLI) effectively."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"\ufe0f-installation",children:"\u2699\ufe0f Installation"}),"\n",(0,s.jsx)(t.p,{children:"The CLI is installed automatically when you run the initial setup scripts. No additional steps are required."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-available-commands",children:"\ud83d\ude80 Available Commands"}),"\n",(0,s.jsx)(t.p,{children:"Use the following commands to interact with the CLI. For a complete list of available commands, run:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"vibe help\n"})}),"\n",(0,s.jsx)(t.h3,{id:"vibe-setup",children:(0,s.jsx)(t.code,{children:"vibe setup"})}),"\n",(0,s.jsx)(t.p,{children:"Initializes the project by configuring Firebase and MongoDB."}),"\n",(0,s.jsx)(t.h3,{id:"vibe-start-service1-service2-",children:(0,s.jsx)(t.code,{children:"vibe start <service1> <service2> ..."})}),"\n",(0,s.jsxs)(t.p,{children:["Starts one or more services. For example: ",(0,s.jsx)(t.code,{children:"vibe start backend"})," starts the backend server. You can also pass multiple arguments: ",(0,s.jsx)(t.code,{children:"vibe start frontend backend"})]}),"\n",(0,s.jsx)(t.p,{children:"If no arguments are provided, both the frontend and backend services will be started by default."}),"\n",(0,s.jsx)(t.h3,{id:"vibe-test",children:(0,s.jsx)(t.code,{children:"vibe test"})}),"\n",(0,s.jsx)(t.p,{children:"Runs the test suite for both the frontend and backend services."}),"\n",(0,s.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9880:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(4700);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6223],{3033:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(4700);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},9374:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Typescript/IoC Containers & Advanced Dependency Management","title":"IoC Containers & Advanced Dependency Management","description":"Topic 7:  IoC Containers & Advanced Dependency Management","source":"@site/newdocs/Typescript/15. IoC Containers & Advanced Dependency Management.md","sourceDirName":"Typescript","slug":"/Typescript/IoC Containers & Advanced Dependency Management","permalink":"/vibe/newdocs/Typescript/IoC Containers & Advanced Dependency Management","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Typescript/15. IoC Containers & Advanced Dependency Management.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{},"sidebar":"newSidebar","previous":{"title":"Dependency Injection","permalink":"/vibe/newdocs/Typescript/Dependency Injection"}}');var i=s(7968),t=s(3033);const c={},o=void 0,l={},a=[{value:"1. Problem Statement",id:"1-problem-statement",level:2},{value:"<strong>Case Study: Scaling the News Aggregator</strong>",id:"case-study-scaling-the-news-aggregator",level:2},{value:"2. Learning Objectives",id:"2-learning-objectives",level:2},{value:"3. Concept Introduction with Analogy",id:"3-concept-introduction-with-analogy",level:2},{value:"<strong>Analogy: Hotel Concierge Service</strong>",id:"analogy-hotel-concierge-service",level:2},{value:"<strong>What Is Inversion of Control (IoC)?</strong>",id:"what-is-inversion-of-control-ioc",level:2},{value:"<strong>What is an IoC Container?</strong>",id:"what-is-an-ioc-container",level:2},{value:"5. Step-by-Step Data Modeling &amp; Code Walkthrough",id:"5-step-by-step-data-modeling--code-walkthrough",level:2},{value:"6.  Challenge",id:"6--challenge",level:2},{value:"7. Quick Recap &amp; Key Takeaways",id:"7-quick-recap--key-takeaways",level:2},{value:"8. (Optional) Programmer\u2019s Workflow Checklist",id:"8-optional-programmers-workflow-checklist",level:2}];function d(e){const n={br:"br",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Topic 7:  IoC Containers & Advanced Dependency Management"}),"\n",(0,i.jsx)(n.h2,{id:"1-problem-statement",children:"1. Problem Statement"}),"\n",(0,i.jsx)(n.h2,{id:"case-study-scaling-the-news-aggregator",children:(0,i.jsx)(n.strong,{children:"Case Study: Scaling the News Aggregator"})}),"\n",(0,i.jsx)(n.p,{children:"Your news aggregator platform is growing:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"You now fetch from dozens of sources, each with its own configuration."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"You want to inject not just one, but many dependencies (e.g., logger, cache, analytics)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Manually wiring up dependencies everywhere is becoming error-prone and hard to maintain."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("img",{src:"https://i.postimg.cc/kMBkmJhR/news-agg.png",width:"400px"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"The problem:"}),(0,i.jsx)(n.br,{}),"\n","How can you automate the creation and injection of dependencies, so your system is scalable, maintainable, and easy to test?"]}),"\n",(0,i.jsx)(n.h2,{id:"2-learning-objectives",children:"2. Learning Objectives"}),"\n",(0,i.jsx)(n.p,{children:"By the end of this tutorial, you will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Understand what an IoC (Inversion of Control) container is."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Use a TypeScript IoC container (TypeDI) to manage dependencies."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Register and resolve dependencies automatically."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"See how IoC containers simplify large-scale application development."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"3-concept-introduction-with-analogy",children:"3. Concept Introduction with Analogy"}),"\n",(0,i.jsx)(n.h2,{id:"analogy-hotel-concierge-service",children:(0,i.jsx)(n.strong,{children:"Analogy: Hotel Concierge Service"})}),"\n",(0,i.jsx)(n.p,{children:"Imagine a hotel guest (your class) needs various services: room cleaning, food delivery, taxi booking."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Instead of contacting each service directly, the guest calls the  ",(0,i.jsx)(n.strong,{children:"concierge"}),"  (IoC container), who arranges everything behind the scenes."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The guest doesn\u2019t care who provides the service, just that it\u2019s delivered on request."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"An IoC container is your concierge:"}),(0,i.jsx)(n.br,{}),"\n","It manages all services (dependencies) and delivers them to your classes as needed."]}),"\n",(0,i.jsx)(n.h2,{id:"what-is-inversion-of-control-ioc",children:(0,i.jsx)(n.strong,{children:"What Is Inversion of Control (IoC)?"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Inversion of Control"}),"  is a principle where the flow of a program\u2019s control is inverted:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Instead of your classes creating and managing their dependencies,"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"An external system (the IoC container) creates and supplies those dependencies."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why use IoC?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This decouples your classes from specific implementations, making your code more flexible, testable, and maintainable."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"what-is-an-ioc-container",children:(0,i.jsx)(n.strong,{children:"What is an IoC Container?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An  ",(0,i.jsx)(n.strong,{children:"IoC Container"}),"  is a framework that manages the creation, configuration, and injection of dependencies automatically."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Instead of manually creating dependencies, you  ",(0,i.jsx)(n.strong,{children:"register"}),"  them with the container and  ",(0,i.jsx)(n.strong,{children:"request"}),"  them when needed."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"5-step-by-step-data-modeling--code-walkthrough",children:"5. Step-by-Step Data Modeling & Code Walkthrough"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Step 1: Install  TypeDI"}),"**"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install typedi reflect-metadata\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["In your  ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),", enable decorators:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:' "experimentalDecorators":  true, \n "emitDecoratorMetadata":  true\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["At the very top of your entry file (e.g., ",(0,i.jsx)(n.code,{children:"index.ts"}),"):"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import "reflect-metadata";\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 2: Define Interfaces and Implementations"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// src/NewsSource.ts\nexport interface NewsSource {\n fetchArticles(): Promise<string[]>;\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// src/RSSFeedSource.ts\nimport { Service } from "typedi";\nimport { NewsSource } from "./NewsSource";\n\n@Service()\nexport class RSSFeedSource implements NewsSource {\n async fetchArticles(): Promise<string[]> {\n   return ["RSS: Article 1", "RSS: Article 2"];\n }\n}\n\n// src/APISource.ts\nimport { Service } from "typedi";\nimport { NewsSource } from "./NewsSource";\n\n@Service()\nexport class APISource implements NewsSource {\n async fetchArticles(): Promise<string[]> {\n   return ["API: Article A", "API: Article B"];\n }\n}\n\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@Service()"}),"  registers the class with TypeDI\u2019s container."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 3: Inject Dependencies Automatically"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// src/NewsAggregator.ts\nimport { Service, Inject } from "typedi";\nimport { NewsSource } from "./NewsSource";\n\n@Service()\nexport class NewsAggregator {\n constructor(\n   @Inject(() => RSSFeedSource) private source: NewsSource\n ) {}\n\n async getLatestArticles() {\n   const articles = await this.source.fetchArticles();\n   articles.forEach(article => console.log(article));\n }\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@Inject(() => RSSFeedSource)"}),"  tells TypeDI which implementation to inject."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 4: Resolve and Use"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// src/index.ts\nimport "reflect-metadata";\nimport { Container } from "typedi";\nimport { NewsAggregator } from "./NewsAggregator";\n\nconst aggregator = Container.get(NewsAggregator);\naggregator.getLatestArticles(); // Uses RSSFeedSource by default\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Container.get()"}),"  creates the class and injects all dependencies."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 5: Swapping Implementations"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Container } from "typedi";\nimport { NewsAggregator } from "./NewsAggregator";\nimport { APISource } from "./APISource";\nimport { NewsSource } from "./NewsSource";\n\n// Override the NewsSource dependency\nContainer.set(NewsSource, new APISource());\n\nconst aggregator2 = Container.get(NewsAggregator);\naggregator2.getLatestArticles(); // Now uses APISource\n\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["No changes to  ",(0,i.jsx)(n.code,{children:"NewsAggregator"}),"  code needed!"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 6: Swapping Implementations"})}),"\n",(0,i.jsxs)(n.p,{children:["Suppose you want to use  ",(0,i.jsx)(n.code,{children:"APISource"}),"  instead of  ",(0,i.jsx)(n.code,{children:"RSSFeedSource"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"container.rebind<NewsSource>(TYPES.NewsSource).to(APISource);\n\nconst aggregator2 = container.resolve(NewsAggregator);\naggregator2.getLatestArticles(); // Now uses APISource\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["No changes to  ",(0,i.jsx)(n.code,{children:"NewsAggregator"}),"  code needed!"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 7: How Does TypeDI Know What to Inject?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Decorators:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@Service()"}),"  marks a class as injectable."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@Inject()"}),"  specifies which dependency to inject."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Metadata:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["TypeDI uses TypeScript\u2019s  ",(0,i.jsx)(n.code,{children:"reflect-metadata"}),"  to read type information and decorator hints."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"6--challenge",children:"6.  Challenge"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Register a new  ",(0,i.jsx)(n.code,{children:"APISource"}),"  with the container."]})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Swap the implementation"}),"  from  ",(0,i.jsx)(n.code,{children:"RSSFeedSource"}),"  to  ",(0,i.jsx)(n.code,{children:"APISource"}),"  without changing the  ",(0,i.jsx)(n.code,{children:"NewsAggregator"}),"  code."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Write a test"}),"  that injects a mock source to verify the aggregator\u2019s behavior."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"7-quick-recap--key-takeaways",children:"7. Quick Recap & Key Takeaways"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"IoC Containers"}),"  automate dependency management."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Register, configure, and swap dependencies centrally."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Classes remain clean, focused, and testable."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"8-optional-programmers-workflow-checklist",children:"8. (Optional) Programmer\u2019s Workflow Checklist"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Define interfaces for dependencies."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Register implementations with the container."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use decorators (",(0,i.jsx)(n.code,{children:"@injectable"}),",  ",(0,i.jsx)(n.code,{children:"@inject"}),") for automatic injection."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Swap implementations for testing or scaling."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);
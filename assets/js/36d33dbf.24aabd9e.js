"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4666],{1437:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"System Design & Architecture/Backend/Core Architectural Layers","title":"Core Architectural Layers","description":"3.1 Controllers (Express + routing-controllers)","source":"@site/docs/System Design & Architecture/Backend/3. Core Architectural Layers.md","sourceDirName":"System Design & Architecture/Backend","slug":"/System Design & Architecture/Backend/Core Architectural Layers","permalink":"/vibe/docs/System Design & Architecture/Backend/Core Architectural Layers","draft":false,"unlisted":false,"editUrl":"https://github.com/continuousactivelearning/vibe/edit/main/docs/docs/System Design & Architecture/Backend/3. Core Architectural Layers.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Directory Structure","permalink":"/vibe/docs/System Design & Architecture/Backend/Directory Structure"},"next":{"title":"Anomalies","permalink":"/vibe/docs/System Design & Architecture/Backend/Module Breakdown/Anomalies"}}');var i=n(7968),t=n(4318);const o={},c=void 0,l={},d=[{value:"3.1 Controllers (Express + routing-controllers)",id:"31-controllers-express--routing-controllers",level:3},{value:"3.2 Services (Business Logic)",id:"32-services-business-logic",level:3},{value:"3.3 Repositories (Data Access)",id:"33-repositories-data-access",level:3},{value:"3.4 Dependency Injection (InversifyJS)",id:"34-dependency-injection-inversifyjs",level:3}];function a(e){const s={code:"code",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h3,{id:"31-controllers-express--routing-controllers",children:"3.1 Controllers (Express + routing-controllers)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"What"}),": Expose REST endpoints and map incoming requests to service calls."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Where"}),": ",(0,i.jsx)(s.code,{children:"src/modules/<module>/controllers/*.ts"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Roles"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Parse and validate input via ",(0,i.jsx)(s.code,{children:"class-validator"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Delegate to Services."}),"\n",(0,i.jsx)(s.li,{children:"Format and send HTTP responses (standard codes and payloads)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Why?"})," Decorator-driven routing (e.g. ",(0,i.jsx)(s.code,{children:"@Get"}),", ",(0,i.jsx)(s.code,{children:"@Post"}),") keeps routing definitions close to handler logic, improving readability and reducing boilerplate."]}),"\n",(0,i.jsx)(s.h3,{id:"32-services-business-logic",children:"3.2 Services (Business Logic)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"What"}),": Encapsulate all business rules, orchestration, and cross-repository workflows."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Where"}),": ",(0,i.jsx)(s.code,{children:"src/modules/<module>/services/*.ts"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Roles"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Transactional operations spanning multiple repositories."}),"\n",(0,i.jsx)(s.li,{children:"Input sanitization and domain validation."}),"\n",(0,i.jsx)(s.li,{children:"Integration with third-party systems (e.g., Firebase, Sentry, GenAI SDK)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Why?"})," Centralizing logic in Services prevents Controllers from becoming fat and simplifies unit testing by isolating business behaviors."]}),"\n",(0,i.jsx)(s.h3,{id:"33-repositories-data-access",children:"3.3 Repositories (Data Access)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"What"}),": Abstract MongoDB CRUD operations behind domain-specific methods."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Where"}),": ",(0,i.jsx)(s.code,{children:"src/modules/<module>/repositories/*.ts"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Roles"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Define entity schemas and indexes."}),"\n",(0,i.jsxs)(s.li,{children:["Provide methods like ",(0,i.jsx)(s.code,{children:"findById"}),", ",(0,i.jsx)(s.code,{children:"create"}),", ",(0,i.jsx)(s.code,{children:"update"}),", ",(0,i.jsx)(s.code,{children:"delete"}),", and advanced queries."]}),"\n",(0,i.jsx)(s.li,{children:"Manage sessions for transactional writes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Why?"})," The repository pattern decouples database concerns from business logic, making it easier to swap implementations or mock data stores in tests."]}),"\n",(0,i.jsx)(s.h3,{id:"34-dependency-injection-inversifyjs",children:"3.4 Dependency Injection (InversifyJS)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"What"}),": Automatically wire Controllers, Services, and Repositories together using injectable symbols."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Where"}),": ",(0,i.jsx)(s.code,{children:"src/container.ts"}),", plus ",(0,i.jsx)(s.code,{children:"types.ts"})," for symbol definitions."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Why?"})," DI promotes loose coupling, enables easy mocking for tests, and enforces clear contract boundaries between layers."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},4318:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var r=n(4700);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);
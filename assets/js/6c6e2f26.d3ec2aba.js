"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4613],{5648:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"React/Testing & Debugging React Apps with TypeScript","title":"Testing & Debugging React Apps with TypeScript","description":"Testing & Debugging React Apps with TypeScript: Jest, Linting, and Best Practices","source":"@site/newdocs/React/Testing & Debugging React Apps with TypeScript.md","sourceDirName":"React","slug":"/React/Testing & Debugging React Apps with TypeScript","permalink":"/vibe/newdocs/React/Testing & Debugging React Apps with TypeScript","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/React/Testing & Debugging React Apps with TypeScript.md","tags":[],"version":"current","frontMatter":{},"sidebar":"newSidebar","previous":{"title":"TSX & Typed Components_Type  Safety","permalink":"/vibe/newdocs/React/TSX & Typed Components_Type  Safety"},"next":{"title":"Zustand Slices and Modular State Architecture","permalink":"/vibe/newdocs/React/Zustand Slices and Modular State Architecture"}}');var r=t(7968),i=t(9880);const l={},c=void 0,o={},d=[{value:"1. Problem Statement",id:"1-problem-statement",level:2},{value:"<strong>Case Study: NewsFleet \u2013 Real-Time Newsroom Dashboard</strong>",id:"case-study-newsfleet--real-time-newsroom-dashboard",level:2},{value:"2. Learning Objectives",id:"2-learning-objectives",level:2},{value:"3. Concept Introduction with Analogy",id:"3-concept-introduction-with-analogy",level:2},{value:"<strong>Analogy: The Newsroom\u2019s Editorial Workflow</strong>",id:"analogy-the-newsrooms-editorial-workflow",level:2},{value:"4. Technical Deep Dive",id:"4-technical-deep-dive",level:2},{value:"5. Step-by-Step Data Modeling &amp; Code Walkthrough",id:"5-step-by-step-data-modeling--code-walkthrough",level:2},{value:"6. Interactive Challenge / Mini-Project",id:"6-interactive-challenge--mini-project",level:2},{value:"7. Common Pitfalls &amp; Best Practices",id:"7-common-pitfalls--best-practices",level:2},{value:"Common Pitfalls &amp; Best Practices (Testing &amp; Code Quality)",id:"common-pitfalls--best-practices-testing--code-quality",level:2},{value:"8. Optional: Programmer\u2019s Workflow Checklist",id:"8-optional-programmers-workflow-checklist",level:2}];function a(e){const n={br:"br",code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Testing & Debugging React Apps with TypeScript: Jest, Linting, and Best Practices"}),"\n",(0,r.jsx)(n.h2,{id:"1-problem-statement",children:"1. Problem Statement"}),"\n",(0,r.jsx)(n.h2,{id:"case-study-newsfleet--real-time-newsroom-dashboard",children:(0,r.jsx)(n.strong,{children:"Case Study: NewsFleet \u2013 Real-Time Newsroom Dashboard"})}),"\n",(0,r.jsx)(n.p,{children:"NewsFleet is a real-time newsroom dashboard:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Editors can add, edit, and approve articles, each with live comment feeds and analytics."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The app must be reliable: a bug could publish the wrong article or lose comments."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Features are built by multiple teams\u2014regressions and accidental breakage are a real risk."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Fast iteration is key, but every deploy must be safe and bug-free."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("img",{src:"https://i.postimg.cc/rwShdmkj/react12.png",alt:"Sample Image",width:"400"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The challenge:"}),(0,r.jsx)(n.br,{}),"\n","How do you ensure every feature is tested, every bug is caught early, and the codebase remains maintainable as NewsFleet grows?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-learning-objectives",children:"2. Learning Objectives"}),"\n",(0,r.jsx)(n.p,{children:"By the end of this tutorial, you will:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Set up  ",(0,r.jsx)(n.strong,{children:"Jest"}),"  for type-safe unit and integration testing in React/TypeScript."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Write and organize tests for components, hooks, and business logic."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use  ",(0,r.jsx)(n.strong,{children:"linting"}),"  (ESLint, Prettier, Biome) for code quality and consistency."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Debug React apps efficiently with modern tools."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Integrate testing and linting into your CI/deployment workflow."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-concept-introduction-with-analogy",children:"3. Concept Introduction with Analogy"}),"\n",(0,r.jsx)(n.h2,{id:"analogy-the-newsrooms-editorial-workflow",children:(0,r.jsx)(n.strong,{children:"Analogy: The Newsroom\u2019s Editorial Workflow"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Jest tests"}),"  are like fact-checkers: They catch errors before articles (features) go live."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Linters"}),"  are like copy editors: They enforce style, consistency, and best practices in every story (file)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Debugging tools"}),"  are the newsroom\u2019s review meetings: They help editors trace issues and fix them before publication."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-technical-deep-dive",children:"4. Technical Deep Dive"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"A. Testing with Jest in TypeScript React Apps"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Why Jest?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Fast, zero-config, works with both frontend and backend TypeScript."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Supports unit, integration, and snapshot testing."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Huge ecosystem (React Testing Library, mocking, coverage)."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Setting Up Jest"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"npm install --save-dev jest @types/jest ts-jest @testing-library/react @testing-library/jest-dom\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add to  ",(0,r.jsx)(n.code,{children:"package.json"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'"scripts": {\n  "test": "jest"\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create  ",(0,r.jsx)(n.code,{children:"jest.config.js"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'jsdom',\n  setupFilesAfterEnv: ['@testing-library/jest-dom/extend-expect']\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Writing a Component Test"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// components/ArticleCard.tsx\nimport React from 'react';\n\ninterface ArticleCardProps {\n  title: string;\n  author: string;\n  onApprove: () => void;\n}\n\nexport const ArticleCard: React.FC<ArticleCardProps> = ({ title, author, onApprove }) => (\n  <div>\n    <h2>{title}</h2>\n    <p>By {author}</p>\n    <button onClick={onApprove}>Approve</button>\n  </div>\n);\n\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// __tests__/ArticleCard.test.tsx\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { ArticleCard } from '../components/ArticleCard';\n\ntest('renders article title and author', () => {\n  render(<ArticleCard title=\"Breaking News\" author=\"Jane Doe\" onApprove={() => {}} />);\n  expect(screen.getByText('Breaking News')).toBeInTheDocument();\n  expect(screen.getByText('By Jane Doe')).toBeInTheDocument();\n});\n\ntest('calls onApprove when button is clicked', () => {\n  const mockApprove = jest.fn();\n  render(<ArticleCard title=\"Test\" author=\"John\" onApprove={mockApprove} />);\n  fireEvent.click(screen.getByText('Approve'));\n  expect(mockApprove).toHaveBeenCalled();\n});\n\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. Testing Hooks and Business Logic"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// hooks/useApproval.ts\nimport { useState } from 'react';\nexport function useApproval() {\n  const [approved, setApproved] = useState(false);\n  const approve = () => setApproved(true);\n  return { approved, approve };\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// __tests__/useApproval.test.ts\nimport { renderHook, act } from '@testing-library/react';\n\nimport { useApproval } from '../hooks/useApproval';\n\ntest('approves correctly', () => {\n  const { result } = renderHook(() => useApproval());\n  expect(result.current.approved).toBe(false);\n  act(() => result.current.approve());\n  expect(result.current.approved).toBe(true);\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"B. Linting: ESLint, Prettier, and Biome"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Why Lint?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Prevents bugs, enforces style, and ensures code consistency."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Catches unused variables, type errors, and anti-patterns before testing or deployment."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Setting Up ESLint and Prettier"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-react\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".eslintrc.js"}),"  example:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  parser: '@typescript-eslint/parser',\n  plugins: ['@typescript-eslint', 'react'],\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n    'plugin:react/recommended',\n    'prettier'\n  ],\n  rules: {\n    'react/prop-types': 'off'\n  }\n};\n\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add a  ",(0,r.jsx)(n.code,{children:".prettierrc"}),"  for formatting preferences."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Biome (Optional Modern Linter)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Biome is a new, fast alternative to ESLint/Prettier."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"npm install --save-dev @biomejs/biome\n\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add a  ",(0,r.jsx)(n.code,{children:"biome.json"}),"  config and run with  ",(0,r.jsx)(n.code,{children:"npx biome check ."}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"C. Debugging React with TypeScript"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use  ",(0,r.jsx)(n.strong,{children:"React Developer Tools"}),"  for inspecting component state, props, and re-renders."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use  ",(0,r.jsx)(n.strong,{children:"VSCode debugging"}),": set breakpoints in  ",(0,r.jsx)(n.code,{children:".tsx"}),"  files, step through logic, and inspect variables."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use  ",(0,r.jsx)(n.strong,{children:"console.log"}),"  and  ",(0,r.jsx)(n.strong,{children:"Jest\u2019s debug output"}),"  for test failures."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"D. Integrating Testing and Linting into CI"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add  ",(0,r.jsx)(n.code,{children:"npm run test"}),"  and  ",(0,r.jsx)(n.code,{children:"npm run lint"}),"  to your CI pipeline (GitHub Actions, GitLab CI, etc.)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Fail the build if tests or linting fail."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use coverage reports (",(0,r.jsx)(n.code,{children:"jest --coverage"}),") to track test completeness."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-step-by-step-data-modeling--code-walkthrough",children:"5. Step-by-Step Data Modeling & Code Walkthrough"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"A. Article Approval Workflow"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// components/ArticleApproval.tsx\nimport React from 'react';\nimport { ArticleCard } from './ArticleCard';\nimport { useApproval } from '../hooks/useApproval';\n\nexport function ArticleApproval({ article }) {\n  const { approved, approve } = useApproval();\n  return (\n    <div>\n      <ArticleCard title={article.title} author={article.author} onApprove={approve} />\n      {approved && <span>Approved!</span>}\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// __tests__/ArticleApproval.test.tsx\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { ArticleApproval } from '../components/ArticleApproval';\n\ntest('shows Approved! after clicking approve', () => {\n  render(<ArticleApproval article={{ title: 'T1', author: 'A1' }} />);\n  fireEvent.click(screen.getByText('Approve'));\n  expect(screen.getByText('Approved!')).toBeInTheDocument();\n});\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"B. Linting and Formatting Example"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Run  ",(0,r.jsx)(n.code,{children:"npx eslint ."}),"  and  ",(0,r.jsx)(n.code,{children:"npx prettier --check ."}),"  before every commit."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Fix errors and warnings before pushing code."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"C. Debugging Example"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Set a breakpoint in  ",(0,r.jsx)(n.code,{children:"useApproval"}),"  or  ",(0,r.jsx)(n.code,{children:"ArticleApproval"}),"  in VSCode."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use React DevTools to inspect the  ",(0,r.jsx)(n.code,{children:"approved"}),"  state as you interact with the UI."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-interactive-challenge--mini-project",children:"6. Interactive Challenge / Mini-Project"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Your Turn!"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Write a test for a  ",(0,r.jsx)(n.code,{children:"CommentBox"}),"  component that:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Renders an input and a "Post" button.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Calls a provided  ",(0,r.jsx)(n.code,{children:"onPost"}),"  callback with the input value when clicked."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Clears the input after posting."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add a lint rule that forbids  ",(0,r.jsx)(n.code,{children:"console.log"}),"  statements in production code."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Debug a failing test: The test expects "Approved!" to appear, but it doesn\u2019t\u2014what could be wrong?'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"7-common-pitfalls--best-practices",children:"7. Common Pitfalls & Best Practices"}),"\n",(0,r.jsx)(n.h2,{id:"common-pitfalls--best-practices-testing--code-quality",children:"Common Pitfalls & Best Practices (Testing & Code Quality)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Pitfall"}),(0,r.jsx)(n.th,{children:"Best Practice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Not testing edge cases"}),(0,r.jsx)(n.td,{children:"Write tests for empty, error, and boundary cases"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Skipping linting/formatting"}),(0,r.jsx)(n.td,{children:"Run lint/format on every commit/CI"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Ignoring test failures"}),(0,r.jsx)(n.td,{children:"Never merge code with failing tests"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Not using coverage reports"}),(0,r.jsx)(n.td,{children:"Track and improve test completeness"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Debugging only in browser"}),(0,r.jsx)(n.td,{children:"Use VSCode/IDE debuggers for TypeScript"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"8-optional-programmers-workflow-checklist",children:"8. Optional: Programmer\u2019s Workflow Checklist"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Write tests for every new component and hook."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Run lint and format on every commit."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Use coverage reports to track test completeness."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Debug with React DevTools and VSCode breakpoints."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Integrate tests and linting into CI/CD pipelines."}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},9880:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(4700);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
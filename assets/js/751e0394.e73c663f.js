"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9245],{1015:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Express/HTTP Methods & Status Codes","title":"HTTP Methods & Status Codes","description":"Topic 8: HTTP Methods & Status Codes in Express","source":"@site/newdocs/Express/3. HTTP Methods & Status Codes.md","sourceDirName":"Express","slug":"/Express/HTTP Methods & Status Codes","permalink":"/vibe/newdocs/Express/HTTP Methods & Status Codes","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Express/3. HTTP Methods & Status Codes.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"newSidebar","previous":{"title":"Organizing Your Express Project for scalability","permalink":"/vibe/newdocs/Express/Organizing Your Express Project for scalability"},"next":{"title":"Request_Response","permalink":"/vibe/newdocs/Express/Request_Response"}}');var t=n(7968),d=n(3033);const i={},o=void 0,l={},c=[{value:"1. Problem Statement",id:"1-problem-statement",level:2},{value:"Case Study: The Neighborhood Food Store Network",id:"case-study-the-neighborhood-food-store-network",level:3},{value:"The challenge:",id:"the-challenge",level:3},{value:"2. Learning Objectives",id:"2-learning-objectives",level:2},{value:"3. Concept Introduction with Analogy",id:"3-concept-introduction-with-analogy",level:2},{value:"Analogy: The Restaurant Waiter",id:"analogy-the-restaurant-waiter",level:3},{value:"A. What Is a Request and a Response?",id:"a-what-is-a-request-and-a-response",level:3},{value:"B. HTTP Methods: The Verbs of Web Requests",id:"b-http-methods-the-verbs-of-web-requests",level:3},{value:"The Core Methods (CRUD)",id:"the-core-methods-crud",level:4},{value:"Why Use Different Methods?",id:"why-use-different-methods",level:4},{value:"C. HTTP Status Codes: The System\u2019s Answers",id:"c-http-status-codes-the-systems-answers",level:3},{value:"Status Code Categories",id:"status-code-categories",level:4},{value:"Most Important Status Codes in REST APIs",id:"most-important-status-codes-in-rest-apis",level:4},{value:"D. HTTP Headers: Extra Info on Every Request/Response",id:"d-http-headers-extra-info-on-every-requestresponse",level:2},{value:"E. RESTful Routing: Mapping Real Actions to System Endpoints",id:"e-restful-routing-mapping-real-actions-to-system-endpoints",level:2},{value:"F. Error Handling and Edge Cases",id:"f-error-handling-and-edge-cases",level:2},{value:"G. Visual Recap: How a Request Flows",id:"g-visual-recap-how-a-request-flows",level:2},{value:"H. Testing and Debugging Tips",id:"h-testing-and-debugging-tips",level:2},{value:"Summary Table: HTTP Methods &amp; Status Codes",id:"summary-table-http-methods--status-codes",level:2},{value:"5. Step-by-Step Data Modeling &amp; Code Walkthrough",id:"5-step-by-step-data-modeling--code-walkthrough",level:2},{value:"6. Challenge",id:"6-challenge",level:2},{value:"7. Quick Recap &amp; Key Takeaways",id:"7-quick-recap--key-takeaways",level:2},{value:"8. Optional: Programmer\u2019s Workflow Checklist",id:"8-optional-programmers-workflow-checklist",level:2},{value:"9. Coming up next",id:"9-coming-up-next",level:2}];function a(e){const s={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Topic 8: HTTP Methods & Status Codes in Express"}),"\n",(0,t.jsx)(s.h2,{id:"1-problem-statement",children:"1. Problem Statement"}),"\n",(0,t.jsx)(s.h3,{id:"case-study-the-neighborhood-food-store-network",children:"Case Study: The Neighborhood Food Store Network"}),"\n",(0,t.jsx)(s.p,{children:"You manage a group of neighborhood food stores. Every day, staff and customers need to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Look up what products are available."}),"\n",(0,t.jsx)(s.li,{children:"Add new items to the inventory."}),"\n",(0,t.jsx)(s.li,{children:"Update details about existing products."}),"\n",(0,t.jsx)(s.li,{children:"Remove items that are no longer sold."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"If requests get mixed up or answers are unclear, staff and customers get confused, orders are delayed, and the stores lose business."}),"\n",(0,t.jsx)("img",{src:"https://i.postimg.cc/hPC3vbJ5/https-ps.png",width:"300px"}),"\n",(0,t.jsx)(s.h3,{id:"the-challenge",children:"The challenge:"}),"\n",(0,t.jsx)(s.p,{children:"How do you organize and handle these different requests so that everyone always gets the right answer, and nothing falls through the cracks?"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"2-learning-objectives",children:"2. Learning Objectives"}),"\n",(0,t.jsx)(s.p,{children:"By the end of this lesson, you will be able to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Organize and implement all types of requests (looking up, adding, changing, removing) in Express."}),"\n",(0,t.jsx)(s.li,{children:"Use and explain HTTP status codes for clear communication."}),"\n",(0,t.jsx)(s.li,{children:"Add and read headers for extra information and control."}),"\n",(0,t.jsx)(s.li,{children:"Write robust, RESTful endpoints for any resource."}),"\n",(0,t.jsx)(s.li,{children:"Understand the difference between GET, POST, PUT, PATCH, and DELETE."}),"\n",(0,t.jsx)(s.li,{children:"Know when to use each status code, and why."}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"3-concept-introduction-with-analogy",children:"3. Concept Introduction with Analogy"}),"\n",(0,t.jsx)(s.h3,{id:"analogy-the-restaurant-waiter",children:"Analogy: The Restaurant Waiter"}),"\n",(0,t.jsx)(s.p,{children:"Imagine you\u2019re at a restaurant:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"You can ask the waiter for the menu (look up)."}),"\n",(0,t.jsx)(s.li,{children:"You can place a new order (add)."}),"\n",(0,t.jsx)(s.li,{children:"You can change your order (update)."}),"\n",(0,t.jsx)(s.li,{children:"You can cancel your order (remove)."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"The waiter always responds clearly:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"\u201cHere\u2019s your menu.\u201d (success)"}),"\n",(0,t.jsx)(s.li,{children:"\u201cYour order is ready!\u201d (success)"}),"\n",(0,t.jsx)(s.li,{children:"\u201cSorry, we don\u2019t have that item.\u201d (not found)"}),"\n",(0,t.jsx)(s.li,{children:"\u201cOrder cancelled.\u201d (removed)"}),"\n",(0,t.jsx)(s.li,{children:"\u201cCould you clarify your request?\u201d (bad request)"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"A well-trained waiter keeps the dining experience smooth and stress-free, just as a well-designed food store system keeps requests and answers organized."}),"\n",(0,t.jsx)(s.h3,{id:"a-what-is-a-request-and-a-response",children:"A. What Is a Request and a Response?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Request"}),": When someone asks your food store system for information or to perform an action."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Response"}),": The system\u2019s answer to that request."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"In web systems, these requests and responses travel over the internet using a protocol called HTTP (HyperText Transfer Protocol)."}),"\n",(0,t.jsx)(s.h3,{id:"b-http-methods-the-verbs-of-web-requests",children:"B. HTTP Methods: The Verbs of Web Requests"}),"\n",(0,t.jsx)(s.p,{children:"HTTP methods are like verbs\u2014they tell the system what action you want to perform."}),"\n",(0,t.jsx)(s.h4,{id:"the-core-methods-crud",children:"The Core Methods (CRUD)"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Method"}),(0,t.jsx)(s.th,{children:"Everyday Action"}),(0,t.jsx)(s.th,{children:"System Meaning"}),(0,t.jsx)(s.th,{children:"Example in Food Store"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"GET"}),(0,t.jsx)(s.td,{children:"\u201cShow me\u2026\u201d"}),(0,t.jsx)(s.td,{children:"Retrieve/read data"}),(0,t.jsx)(s.td,{children:"List all products"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"POST"}),(0,t.jsx)(s.td,{children:"\u201cAdd this\u2026\u201d"}),(0,t.jsx)(s.td,{children:"Create new data"}),(0,t.jsx)(s.td,{children:"Add a new product"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"PUT"}),(0,t.jsx)(s.td,{children:"\u201cReplace this\u2026\u201d"}),(0,t.jsx)(s.td,{children:"Update/replace existing data"}),(0,t.jsx)(s.td,{children:"Update all details of a product"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"PATCH"}),(0,t.jsx)(s.td,{children:"\u201cChange this part\u2026\u201d"}),(0,t.jsx)(s.td,{children:"Update part of existing data"}),(0,t.jsx)(s.td,{children:"Change only the price"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"DELETE"}),(0,t.jsx)(s.td,{children:"\u201cRemove this\u2026\u201d"}),(0,t.jsx)(s.td,{children:"Delete data"}),(0,t.jsx)(s.td,{children:"Remove a product"})]})]})]}),"\n",(0,t.jsx)("img",{src:"https://i.postimg.cc/cJDbgR5H/http4.png",width:"600px"}),"\n",(0,t.jsx)(s.h4,{id:"why-use-different-methods",children:"Why Use Different Methods?"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Clarity"}),": Each method has a clear, agreed-upon meaning."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Safety"}),": GET requests don\u2019t change data; POST/PUT/PATCH/DELETE do."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Automation"}),": Tools and browsers know how to handle each method."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"c-http-status-codes-the-systems-answers",children:"C. HTTP Status Codes: The System\u2019s Answers"}),"\n",(0,t.jsx)(s.p,{children:"Status codes are three-digit numbers sent with every response. They help the client (browser, app, or another system) understand what happened."}),"\n",(0,t.jsx)(s.h4,{id:"status-code-categories",children:"Status Code Categories"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Code Range"}),(0,t.jsx)(s.th,{children:"Meaning"}),(0,t.jsx)(s.th,{children:"Examples"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"1xx"}),(0,t.jsx)(s.td,{children:"Informational"}),(0,t.jsx)(s.td,{children:"Rarely used in APIs"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"2xx"}),(0,t.jsx)(s.td,{children:"Success"}),(0,t.jsx)(s.td,{children:"200 OK, 201 Created, 204 No Content"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"3xx"}),(0,t.jsx)(s.td,{children:"Redirection"}),(0,t.jsx)(s.td,{children:"Not common in APIs"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"4xx"}),(0,t.jsx)(s.td,{children:"Client Error (your fault)"}),(0,t.jsx)(s.td,{children:"400 Bad Request, 404 Not Found"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"5xx"}),(0,t.jsx)(s.td,{children:"Server Error (our fault)"}),(0,t.jsx)(s.td,{children:"500 Internal Server Error"})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"most-important-status-codes-in-rest-apis",children:"Most Important Status Codes in REST APIs"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Code"}),(0,t.jsx)(s.th,{children:"When to Use"}),(0,t.jsx)(s.th,{children:"Example Scenario"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"200"}),(0,t.jsx)(s.td,{children:"Success (GET/PUT/PATCH)"}),(0,t.jsx)(s.td,{children:"Products listed, product updated"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"201"}),(0,t.jsx)(s.td,{children:"Resource created (POST)"}),(0,t.jsx)(s.td,{children:"New product added"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"204"}),(0,t.jsx)(s.td,{children:"Success, no content (DELETE)"}),(0,t.jsx)(s.td,{children:"Product deleted, nothing to return"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"400"}),(0,t.jsx)(s.td,{children:"Bad request (invalid input)"}),(0,t.jsx)(s.td,{children:"Missing product name or price"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"404"}),(0,t.jsx)(s.td,{children:"Not found"}),(0,t.jsx)(s.td,{children:"Product doesn\u2019t exist"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"409"}),(0,t.jsx)(s.td,{children:"Conflict (rare, e.g., duplicate)"}),(0,t.jsx)(s.td,{children:"Trying to add a product that already exists"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"500"}),(0,t.jsx)(s.td,{children:"Internal server error"}),(0,t.jsx)(s.td,{children:"Unexpected bug or crash"})]})]})]}),"\n",(0,t.jsx)("img",{src:"https://i.postimg.cc/PrhPJ1GY/https3.png",width:"400px"}),"\n",(0,t.jsx)(s.h2,{id:"d-http-headers-extra-info-on-every-requestresponse",children:"D. HTTP Headers: Extra Info on Every Request/Response"}),"\n",(0,t.jsx)(s.p,{children:"Headers are like sticky notes attached to a package:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Content-Type:"}),"  Tells what\u2019s inside (e.g., JSON, HTML)."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Authorization:"}),"  Who is making the request."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Custom headers:"}),'  E.g., X-Store-Region: "Downtown".']}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example in Express:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:'res.setHeader("X-Store-Region", "Downtown");\n'})}),"\n",(0,t.jsx)(s.h2,{id:"e-restful-routing-mapping-real-actions-to-system-endpoints",children:"E. RESTful Routing: Mapping Real Actions to System Endpoints"}),"\n",(0,t.jsx)(s.p,{children:"REST (Representational State Transfer) is a set of conventions for organizing endpoints."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Each  ",(0,t.jsx)(s.strong,{children:"resource"}),"  (e.g., products) has its own  ",(0,t.jsx)(s.strong,{children:"route"}),"  (e.g.,  ",(0,t.jsx)(s.code,{children:"/products"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["The  ",(0,t.jsx)(s.strong,{children:"method"}),"  (GET, POST, etc.) tells what action to take."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"GET /products"}),"  \u2192 List all products"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"POST /products"}),"  \u2192 Add a new product"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"GET /products/:id"}),"  \u2192 Get details for one product"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"PUT /products/:id"}),"  \u2192 Replace all details for a product"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"PATCH /products/:id/price"}),"  \u2192 Update just the price"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"DELETE /products/:id"}),"  \u2192 Remove a product"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"f-error-handling-and-edge-cases",children:"F. Error Handling and Edge Cases"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Always check for missing or invalid data."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Always send a clear status code and message."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Never expose sensitive server errors to the client (use 500 for unexpected issues)."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"g-visual-recap-how-a-request-flows",children:"G. Visual Recap: How a Request Flows"}),"\n",(0,t.jsx)("img",{src:"\nhttps://i.postimg.cc/htS3PZPx/https.png",width:"400px"}),"\n",(0,t.jsx)(s.h2,{id:"h-testing-and-debugging-tips",children:"H. Testing and Debugging Tips"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Use tools like  ",(0,t.jsx)(s.strong,{children:"Postman"}),"  or  ",(0,t.jsx)(s.strong,{children:"curl"}),"  to send requests and see responses."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Always check status codes and response bodies."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Log requests and errors on the server for troubleshooting."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"summary-table-http-methods--status-codes",children:"Summary Table: HTTP Methods & Status Codes"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Action"}),(0,t.jsx)(s.th,{children:"Method"}),(0,t.jsx)(s.th,{children:"Route"}),(0,t.jsx)(s.th,{children:"Status Codes"}),(0,t.jsx)(s.th,{children:"Use Case"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"List all products"}),(0,t.jsx)(s.td,{children:"GET"}),(0,t.jsx)(s.td,{children:"/products"}),(0,t.jsx)(s.td,{children:"200"}),(0,t.jsx)(s.td,{children:"Show all products"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Get one product"}),(0,t.jsx)(s.td,{children:"GET"}),(0,t.jsxs)(s.td,{children:["/products/",":id"]}),(0,t.jsx)(s.td,{children:"200, 404"}),(0,t.jsx)(s.td,{children:"Show product or not found"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Add product"}),(0,t.jsx)(s.td,{children:"POST"}),(0,t.jsx)(s.td,{children:"/products"}),(0,t.jsx)(s.td,{children:"201, 400"}),(0,t.jsx)(s.td,{children:"Add new product, validate input"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Replace product"}),(0,t.jsx)(s.td,{children:"PUT"}),(0,t.jsxs)(s.td,{children:["/products/",":id"]}),(0,t.jsx)(s.td,{children:"200, 400, 404"}),(0,t.jsx)(s.td,{children:"Replace all fields, validate input"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Update price"}),(0,t.jsx)(s.td,{children:"PATCH"}),(0,t.jsxs)(s.td,{children:["/products/",":id","/price"]}),(0,t.jsx)(s.td,{children:"200, 400, 404"}),(0,t.jsx)(s.td,{children:"Change price only"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Remove product"}),(0,t.jsx)(s.td,{children:"DELETE"}),(0,t.jsxs)(s.td,{children:["/products/",":id"]}),(0,t.jsx)(s.td,{children:"204, 404"}),(0,t.jsx)(s.td,{children:"Remove product, no content on success"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"5-step-by-step-data-modeling--code-walkthrough",children:"5. Step-by-Step Data Modeling & Code Walkthrough"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"A. Define Product Interface and Sample Data"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:'interface Product {\nid: string;\nname: string;\nprice: number;\ninStock: boolean;\n}\n\nlet products: Product[] = [\n{ id: "1", name: "Bananas", price: 1.5, inStock: true },\n{ id: "2", name: "Apples", price: 2.0, inStock: false },\n];\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"B. Create Express Router and Implement RESTful Routes"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:'import { Router, Request, Response } from "express";\nconst router = Router();\n\n// GET all products\nrouter.get("/", (req: Request, res: Response) => {\nres.status(200).json(products);\n});\n\n// GET product by ID\nrouter.get("/:id", (req: Request, res: Response) => {\nconst product = products.find(p => p.id === req.params.id);\nif (!product) {\n return res.status(404).json({ error: "Product not found" });\n}\nres.status(200).json(product);\n});\n\n// POST new product\nrouter.post("/", (req: Request, res: Response) => {\nconst { name, price, inStock } = req.body;\nif (!name || price === undefined || inStock === undefined) {\n return res.status(400).json({ error: "Missing required fields" });\n}\nconst newProduct: Product = {\n id: (products.length + 1).toString(),\n name,\n price,\n inStock,\n};\nproducts.push(newProduct);\nres.status(201).json(newProduct);\n});\n\n// PUT update product\nrouter.put("/:id", (req: Request, res: Response) => {\nconst productIndex = products.findIndex(p => p.id === req.params.id);\nif (productIndex === -1) {\n return res.status(404).json({ error: "Product not found" });\n}\nconst { name, price, inStock } = req.body;\nif (!name || price === undefined || inStock === undefined) {\n return res.status(400).json({ error: "Missing required fields" });\n}\nproducts[productIndex] = { id: req.params.id, name, price, inStock };\nres.status(200).json(products[productIndex]);\n});\n\n// PATCH update product price\nrouter.patch("/:id/price", (req: Request, res: Response) => {\nconst product = products.find(p => p.id === req.params.id);\nconst { price } = req.body;\nif (!product) {\n return res.status(404).json({ error: "Product not found" });\n}\nif (typeof price !== "number" || price < 0) {\n return res.status(400).json({ error: "Invalid price" });\n}\nproduct.price = price;\nres.status(200).json(product);\n});\n\n// DELETE product\nrouter.delete("/:id", (req: Request, res: Response) => {\nconst productIndex = products.findIndex(p => p.id === req.params.id);\nif (productIndex === -1) {\n return res.status(404).json({ error: "Product not found" });\n}\nproducts.splice(productIndex, 1);\nres.sendStatus(204);\n});\n\nexport default router;\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Explanation for Each Route:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"GET /products:"}),"  Returns all products, always 200."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["GET /products/","\ud83c\udd94"]}),"  Returns product or 404 if not found."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"POST /products:"}),"  Validates input, returns 400 if missing fields, 201 if created."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["PUT /products/","\ud83c\udd94"]}),"  Replaces all fields, returns 400 if missing, 404 if not found, 200 if updated."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["PATCH /products/",":id","/price:"]}),"  Only updates price, returns 400 if invalid, 404 if not found, 200 if updated."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsxs)(s.strong,{children:["DELETE /products/","\ud83c\udd94"]}),"  Removes product, 404 if not found, 204 if deleted."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"6-challenge",children:"6. Challenge"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Your Turn!"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Add a PATCH endpoint  ",(0,t.jsx)(s.code,{children:"/products/:id/inStock"}),"  to update only the  ",(0,t.jsx)(s.code,{children:"inStock"}),"  status of a product."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Return  ",(0,t.jsx)(s.code,{children:"400 Bad Request"}),"  if the new status is missing or not a boolean."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"7-quick-recap--key-takeaways",children:"7. Quick Recap & Key Takeaways"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Use HTTP methods (GET, POST, PUT, PATCH, DELETE) to match CRUD operations."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Use status codes to clearly indicate success or failure."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Modular routes and clear responses improve reliability and user experience."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Always validate and structure your responses for clarity."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Headers can add useful metadata to responses."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"8-optional-programmers-workflow-checklist",children:"8. Optional: Programmer\u2019s Workflow Checklist"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Use the correct HTTP method for each action."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Validate all input before processing."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Return appropriate status codes for every response."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Use clear, structured JSON for all responses."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Modularize routes for maintainability."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Test endpoints with tools like Postman or curl."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Log errors for debugging, but never leak sensitive info to clients."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Use headers for extra context when needed."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"9-coming-up-next",children:"9. Coming up next"}),"\n",(0,t.jsxs)(s.p,{children:["Learn how to ",(0,t.jsx)(s.strong,{children:"type requests and responses"})," precisely, so your API never accepts bad data or sends confusing responses!"]})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},3033:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var r=n(4700);const t={},d=r.createContext(t);function i(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);
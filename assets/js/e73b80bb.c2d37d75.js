"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2716],{2006:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Typescript/Classes & Access Modifiers","title":"Classes & Access Modifiers","description":"Topic 1: Classes & Access Modifiers (public, private, protected, inheritance, abstract classes)","source":"@site/newdocs/Typescript/9. Classes & Access Modifiers.md","sourceDirName":"Typescript","slug":"/Typescript/Classes & Access Modifiers","permalink":"/vibe/newdocs/Typescript/Classes & Access Modifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Typescript/9. Classes & Access Modifiers.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"newSidebar","previous":{"title":"TypeScript \u2013 null vs. undefined","permalink":"/vibe/newdocs/Typescript/Null vs Undefined/8.1 Null vs Undefined"},"next":{"title":"Type Alias in TypeScript","permalink":"/vibe/newdocs/Typescript/Type Aliases/Type Aliases"}}');var t=s(7968),r=s(9880);const l={},c=void 0,o={},d=[{value:"1. Problem Statement",id:"1-problem-statement",level:2},{value:"2. Learning Objectives",id:"2-learning-objectives",level:2},{value:"3. Concept Introduction with Office Building Analogy",id:"3-concept-introduction-with-office-building-analogy",level:2},{value:"<strong>What Are Classes in TypeScript?</strong>",id:"what-are-classes-in-typescript",level:2},{value:"<strong>Access Modifiers: Controlling Visibility</strong>",id:"access-modifiers-controlling-visibility",level:2},{value:"<strong>Public</strong>",id:"public",level:2},{value:"<strong>Private</strong>",id:"private",level:2},{value:"<strong>Protected</strong>",id:"protected",level:2},{value:"<strong>Read-Only</strong>",id:"read-only",level:2},{value:"<strong>Inheritance: Extending Classes</strong>",id:"inheritance-extending-classes",level:2},{value:"<strong>Abstract Classes: Defining Contracts</strong>",id:"abstract-classes-defining-contracts",level:2},{value:"<strong>Combining Access Modifiers with Constructors</strong>",id:"combining-access-modifiers-with-constructors",level:2},{value:"4. Step-by-Step Data Modeling",id:"4-step-by-step-data-modeling",level:2},{value:"5. Live Code Walkthrough",id:"5-live-code-walkthrough",level:2},{value:"Quiz: Controlled Question Editing",id:"quiz-controlled-question-editing",level:2},{value:"Lesson: Safe Content Editing",id:"lesson-safe-content-editing",level:2},{value:"6. Challenge",id:"6-challenge",level:2},{value:"7. Quick Recap &amp; Key Takeaways",id:"7-quick-recap--key-takeaways",level:2},{value:"8. (Optional) Programmer\u2019s Workflow Checklist",id:"8-optional-programmers-workflow-checklist",level:2},{value:"9. Coming up next",id:"9-coming-up-next",level:2}];function a(e){const n={br:"br",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Topic 1: Classes & Access Modifiers (public, private, protected, inheritance, abstract classes)"}),"\n",(0,t.jsx)(n.h2,{id:"1-problem-statement",children:"1. Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Problem Statement: EduFlow\u2019s Content Control Crisis"})}),"\n",(0,t.jsxs)(n.p,{children:["EduFlow Academy is a rapidly growing EdTech Startup.",(0,t.jsx)(n.br,{}),"\n","But chaos is brewing:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Learners"})," are somehow changing quiz questions after starting a quiz."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Instructors"})," sometimes accidentally publish unfinished lessons."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Admins"})," want to review everything, but sometimes they accidentally change published or sensitive content."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://i.postimg.cc/W3gcGZVP/image-1.png",alt:"Role-Based Access"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Your mission:"}),(0,t.jsx)(n.br,{}),"\n","Design a system so that:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Learners can only view and submit answers."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Instructors can create and edit content, but only before it\u2019s published."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Admins can review all content, but not accidentally change published materials."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Expected outcome:"}),(0,t.jsx)(n.br,{}),"\n","A secure, organized platform where each role has just the right level of access, and shared features are coded only once."]}),"\n",(0,t.jsx)(n.h2,{id:"2-learning-objectives",children:"2. Learning Objectives"}),"\n",(0,t.jsx)(n.p,{children:"By the end of this lesson, you\u2019ll be able to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use  ",(0,t.jsx)(n.code,{children:"public"}),",  ",(0,t.jsx)(n.code,{children:"private"}),", and  ",(0,t.jsx)(n.code,{children:"protected"}),"  to control access to data and actions."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Apply inheritance to share common features between content types."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create abstract classes as blueprints for specialized content."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Build a secure, organized content management system for EduFlow Academy."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"3-concept-introduction-with-office-building-analogy",children:"3. Concept Introduction with Office Building Analogy"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Think of your code as an office building:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Area/Room"}),(0,t.jsx)(n.th,{children:"Access Modifier"}),(0,t.jsx)(n.th,{children:"Who Can Enter?"}),(0,t.jsx)(n.th,{children:"What Happens Here?"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Lobby & Hallways"}),(0,t.jsx)(n.td,{children:"public"}),(0,t.jsx)(n.td,{children:"Everyone (employees, managers, directors)"}),(0,t.jsx)(n.td,{children:"Viewing shared info, casual meetings"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Manager\u2019s Office"}),(0,t.jsx)(n.td,{children:"private"}),(0,t.jsx)(n.td,{children:"Only the manager (the class itself)"}),(0,t.jsx)(n.td,{children:"Working on sensitive projects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Shared Meeting Room"}),(0,t.jsx)(n.td,{children:"protected"}),(0,t.jsx)(n.td,{children:"Managers and directors (class & subclasses)"}),(0,t.jsx)(n.td,{children:"Team planning, confidential reviews"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Building Blueprint"}),(0,t.jsx)(n.td,{children:"Abstract Class"}),(0,t.jsx)(n.td,{children:"Blueprint for all rooms"}),(0,t.jsx)(n.td,{children:"Sets required features for all rooms"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Sets required features for all rooms"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"public:"}),"  Open to all, like the lobby."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"private:"}),"  Only for the room owner, like a locked office."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"protected:"}),"  For managers and directors, like a meeting room with restricted access."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"abstract class:"}),"  The blueprint for all rooms; you can\u2019t walk into a blueprint, but every room follows its design."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"what-are-classes-in-typescript",children:(0,t.jsx)(n.strong,{children:"What Are Classes in TypeScript?"})}),"\n",(0,t.jsxs)(n.p,{children:["A  ",(0,t.jsx)(n.strong,{children:"class"}),"  in TypeScript is a blueprint for creating objects with specific properties (fields) and methods (functions).",(0,t.jsx)(n.br,{}),"\n","Classes support  ",(0,t.jsx)(n.strong,{children:"object-oriented programming"}),"  concepts like encapsulation, inheritance, and abstraction"]}),"\n",(0,t.jsx)(n.h2,{id:"access-modifiers-controlling-visibility",children:(0,t.jsx)(n.strong,{children:"Access Modifiers: Controlling Visibility"})}),"\n",(0,t.jsxs)(n.p,{children:["Access modifiers determine  ",(0,t.jsx)(n.strong,{children:"where class members (properties and methods) can be accessed"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"public",children:(0,t.jsx)(n.strong,{children:"Public"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Default"}),"  modifier."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Members are accessible from anywhere (inside/outside the class)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'class Person {\npublic name: string;\nconstructor(name: string) {\n  this.name = name;\n}\n}\nconst p = new Person("Alice");\nconsole.log(p.name); // OK\n'})}),"\n",(0,t.jsx)(n.h2,{id:"private",children:(0,t.jsx)(n.strong,{children:"Private"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Accessible  ",(0,t.jsx)(n.strong,{children:"only within the class"}),"  where declared."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Not accessible in subclasses or from outside."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Secret {\n private code: string;\n constructor(code: string) {\n   this.code = code;\n }\n reveal() {\n   return this.code;\n }\n}\nconst s = new Secret(\"1234\");\n// console.log(s.code); // Error: Property 'code' is private\nconsole.log(s.reveal()); // OK\n"})}),"\n",(0,t.jsx)(n.h2,{id:"protected",children:(0,t.jsx)(n.strong,{children:"Protected"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Accessible  ",(0,t.jsx)(n.strong,{children:"within the class and its subclasses"}),"  (not outside)"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Animal {\nprotected species: string;\nconstructor(species: string) {\n  this.species = species;\n}\n}\nclass Dog extends Animal {\nbark() {\n  return `Woof! I am a ${this.species}`;\n}\n}\nconst d = new Dog(\"canine\");\nconsole.log(d.bark()); // OK\n// console.log(d.species); // Error: Property 'species' is protected\n"})}),"\n",(0,t.jsx)(n.h2,{id:"read-only",children:(0,t.jsx)(n.strong,{children:"Read-Only"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Not an access modifier, but ensures the value can\u2019t be changed after initialization."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'class Book {\nreadonly isbn: string;\nconstructor(isbn: string) {\n  this.isbn = isbn;\n}\n}\nconst b = new Book("123-456");\n// b.isbn = "789-101"; // Error: Cannot assign to \'isbn\' because it is a read-only property\n'})}),"\n",(0,t.jsx)(n.h2,{id:"inheritance-extending-classes",children:(0,t.jsx)(n.strong,{children:"Inheritance: Extending Classes"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Inheritance"}),"  lets you create a new class (child/subclass) that  ",(0,t.jsx)(n.strong,{children:"inherits"}),"  properties and methods from another class (parent/superclass)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'class Vehicle {\npublic brand: string;\nconstructor(brand: string) {\n  this.brand = brand;\n}\ndrive() {\n  console.log(`${this.brand} is moving`);\n}\n}\nclass Car extends Vehicle {\npublic model: string;\nconstructor(brand: string, model: string) {\n  super(brand); // calls Vehicle\'s constructor\n  this.model = model;\n}\ndrive() {\n  super.drive(); // call parent method\n  console.log(`Model: ${this.model}`);\n}\n}\nconst myCar = new Car("Toyota", "Corolla");\nmyCar.drive();\n// Output: Toyota is moving\n//         Model: Corolla\n\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"super"})," keyword calls the parent class\u2019s constructor or methods."]}),"\n",(0,t.jsx)(n.h2,{id:"abstract-classes-defining-contracts",children:(0,t.jsx)(n.strong,{children:"Abstract Classes: Defining Contracts"})}),"\n",(0,t.jsxs)(n.p,{children:["An  ",(0,t.jsx)(n.strong,{children:"abstract class"}),"  is a class that  ",(0,t.jsx)(n.strong,{children:"cannot be incorporated directly"}),". It\u2019s used as a base for other classes and can include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Abstract methods"}),": Declared without implementation-must be implemented by subclasses."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Concrete methods"}),": Fully implemented in the abstract class."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"combining-access-modifiers-with-constructors",children:(0,t.jsx)(n.strong,{children:"Combining Access Modifiers with Constructors"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Person {\n constructor(public name: string, private age: number) {}\n public getAge(): number {\n   return this.age;\n }\n}\nconst john = new Person('John', 30);\nconsole.log(john.name); // OK\nconsole.log(john.getAge()); // OK\n// console.log(john.age); // Error: 'age' is private\n"})}),"\n",(0,t.jsx)(n.p,{children:"TypeScript allows you to declare and initialize properties directly in the constructor using access modifiers"}),"\n",(0,t.jsx)(n.h2,{id:"4-step-by-step-data-modeling",children:"4. Step-by-Step Data Modeling"}),"\n",(0,t.jsxs)(n.p,{children:["Let\u2019s start by designing the  ",(0,t.jsx)(n.strong,{children:"Content blueprint"}),"  that every content type must follow."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Abstract class: the blueprint for all content\nabstract class Content {\npublic readonly title: string;\npublic readonly author: string;\nprivate published: boolean = false;\n\nconstructor(title: string, author: string) {\n  this.title = title;\n  this.author = author;\n}\n\npublic publish() {\n  this.published = true;\n}\n\nprotected isPublished(): boolean {\n  return this.published;\n}\n\n// Every content type must say what type it is\nabstract getType(): string;\n}\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Content"}),"  is the  ",(0,t.jsx)(n.strong,{children:"abstract class"}),"  (blueprint)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Every content has a title, an author, and can be published (locked for editing)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Only subclasses must implement  ",(0,t.jsx)(n.code,{children:"getType()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"5-live-code-walkthrough",children:"5. Live Code Walkthrough"}),"\n",(0,t.jsx)(n.h2,{id:"quiz-controlled-question-editing",children:"Quiz: Controlled Question Editing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'class Quiz extends Content {\nprivate questions: string[] = [];\n\nconstructor(title: string, author: string, questions: string[] = []) {\n  super(title, author);\n  this.questions = questions;\n}\n\npublic addQuestion(question: string, isInstructor: boolean) {\n  if (!this.isPublished() && isInstructor) {\n    this.questions.push(question);\n  } else {\n    throw new Error("Cannot add questions after publishing or if not an instructor.");\n  }\n}\n\npublic getQuestions(): string[] {\n  return [...this.questions];\n}\n\ngetType(): string {\n  return "Quiz";\n}\n}\n\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Only instructors can add questions, and only before publishing."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"lesson-safe-content-editing",children:"Lesson: Safe Content Editing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'\nclass Lesson extends Content {\nprivate content: string;\n\nconstructor(title: string, author: string, content: string) {\n  super(title, author);\n  this.content = content;\n}\n\npublic editContent(newContent: string, isInstructor: boolean) {\n  if (!this.isPublished() && isInstructor) {\n    this.content = newContent;\n  } else {\n    throw new Error("Cannot edit content after publishing or if not an instructor.");\n  }\n}\n\npublic getContent(): string {\n  return this.content;\n}\n\ngetType(): string {\n  return "Lesson";\n}\n}\n\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Only instructors can edit content, and only before publishing."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"6-challenge",children:"6. Challenge"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Your Turn!"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Create an  ",(0,t.jsx)(n.code,{children:"Assignment"}),"  class extending  ",(0,t.jsx)(n.code,{children:"Content"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Add a  ",(0,t.jsx)(n.code,{children:"dueDate"}),"  property (private)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Allow only instructors to set or update the due date before publishing."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Implement  ",(0,t.jsx)(n.code,{children:"getType()"}),"  returning  ",(0,t.jsx)(n.code,{children:'"Assignment"'}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Try it yourself before checking the solution!"}),"\n",(0,t.jsx)(n.h2,{id:"7-quick-recap--key-takeaways",children:"7. Quick Recap & Key Takeaways"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"public"})}),": Anyone can use these features."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"private"})}),": Only the class itself can access."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"protected"})}),": Shared with subclasses."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Inheritance"}),": Share common features across different content types."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Abstract classes"}),": Set blueprints for all content, requiring certain features."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"8-optional-programmers-workflow-checklist",children:"8. (Optional) Programmer\u2019s Workflow Checklist"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Identify shared features for all content \u2192 put in abstract class."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use  ",(0,t.jsx)(n.code,{children:"private"}),"  for sensitive info (questions, content, due dates)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use  ",(0,t.jsx)(n.code,{children:"protected"}),"  for features shared with subclasses."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Expose safe actions with  ",(0,t.jsx)(n.code,{children:"public"}),"  methods."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Test access by role (learner, instructor, admin)."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"9-coming-up-next",children:"9. Coming up next"}),"\n",(0,t.jsxs)(n.p,{children:["Unlock the power of  ",(0,t.jsx)(n.strong,{children:"Generics"}),"!",(0,t.jsx)(n.br,{}),"\n","Imagine designing tools (like boxes or folders) that magically adapt to hold any kind of content-quiz, lesson, or assignment.  You\u2019ll learn how to build these flexible, reusable tools in TypeScript!"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},9880:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(4700);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
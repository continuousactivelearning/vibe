"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2577],{2931:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Github Tutorial/Github Tutorial 5","title":"Github Tutorial 5","description":"Introduction and Context","source":"@site/newdocs/Github Tutorial/Github Tutorial 5.md","sourceDirName":"Github Tutorial","slug":"/Github Tutorial/Github Tutorial 5","permalink":"/vibe/newdocs/Github Tutorial/Github Tutorial 5","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Github Tutorial/Github Tutorial 5.md","tags":[],"version":"current","frontMatter":{},"sidebar":"newSidebar","previous":{"title":"Github Tutorial 4","permalink":"/vibe/newdocs/Github Tutorial/Github Tutorial 4"},"next":{"title":"Introduction to TypeScript","permalink":"/vibe/newdocs/Typescript/Introduction to TypeScript/1.1 Introduction to Typescript"}}');var o=n(7968),r=n(4146);const s={},a=void 0,l={},c=[{value:"Introduction and Context",id:"introduction-and-context",level:2},{value:"Case Study Overview",id:"case-study-overview",level:2},{value:"Clone vs Fork",id:"clone-vs-fork",level:2},{value:"How to Fork a Repository",id:"how-to-fork-a-repository",level:2},{value:"How to clone using the GitHub app instead of the terminal",id:"how-to-clone-using-the-github-app-instead-of-the-terminal",level:2},{value:"Concepts Explained with Analogies",id:"concepts-explained-with-analogies",level:2},{value:"Step-by-Step Guided Walkthrough",id:"step-by-step-guided-walkthrough",level:2},{value:"Step 1: Fork and Clone the Repository",id:"step-1-fork-and-clone-the-repository",level:2},{value:"Step 2: Apply a Bug Fix via Cherry-Pick",id:"step-2-apply-a-bug-fix-via-cherry-pick",level:2},{value:"Step 3: Create a Pull Request Upstream",id:"step-3-create-a-pull-request-upstream",level:2},{value:"Step 4: Synchronize Your Fork with Upstream",id:"step-4-synchronize-your-fork-with-upstream",level:2},{value:"Step 5: Tagging a New Release and Creating GitHub Release",id:"step-5-tagging-a-new-release-and-creating-github-release",level:2},{value:"Step 6: Advanced History Editing (Optional)",id:"step-6-advanced-history-editing-optional",level:2},{value:"Best Practices and Tips",id:"best-practices-and-tips",level:2},{value:"Real-World Application and Extension",id:"real-world-application-and-extension",level:2}];function h(e){const t={a:"a",br:"br",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"introduction-and-context",children:"Introduction and Context"}),"\n",(0,o.jsx)(t.p,{children:"Open-source ecosystems thrive when contributors can safely fork projects, apply targeted fixes, and coordinate releases without disrupting the main codebase. By mastering forking, cherry-picking, semantic versioning, and command-line automation, you\u2019ll be equipped to engage with projects of any size and complexity."}),"\n",(0,o.jsx)(t.h2,{id:"case-study-overview",children:"Case Study Overview"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Problem Statement"}),(0,o.jsx)(t.br,{}),"\n","Sam discovers a bug in  ",(0,o.jsx)(t.code,{children:"DataVizJS"}),", a widely used charting library, but lacks write access to its repository. They need to fork the project, apply the fix from a colleague\u2019s experimental branch, propose a pull request upstream, and publish a patched release under their own namespace. Success means the bug is resolved upstream, their fork stays in sync, and their custom release adheres to semantic versioning with minimal manual effort."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Learning Objectives"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Fork and synchronize an external repository"}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Apply specific commits via cherry-picking or moving commits"}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Create and push semantic version tags and GitHub releases"}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Leverage advanced Git CLI commands (rebase, reset, interactive rebase)"}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Automate GitHub tasks using the GitHub CLI"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"clone-vs-fork",children:"Clone vs Fork"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#the-difference-between-forking-and-cloning-a-proje"}),"The difference between forking and cloning a project/repository really comes down to how much control a developer is allowed to have over a given repository."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#by-forking-you-can-make-your-own-copy-of-a-reposit"}),"By  ",(0,o.jsx)(t.strong,{children:"Forking"}),", you can make your own copy of a repository somewhere else (for example, GitHub). Owning a copy of the repository means that you can make changes to it without affecting the original repository."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#cloning-creates-a-local-copy-of-a-repository-imagi"}),(0,o.jsx)(t.strong,{children:"Cloning"}),"  creates a local copy of a repository. Imagine doing that by downloading a repository to your computer's local storage. Clones have references to their original repositories, unlike forks."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#clone-vs-fork"}),(0,o.jsx)(t.img,{src:"https://i.imgur.com/eSN0n99.jpg?raw=true",alt:"Clone vs Fork"})]}),"\n",(0,o.jsxs)(t.h2,{id:"how-to-fork-a-repository",children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#how-to-fork-a-repository"}),"How to Fork a Repository"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#so-you-want-to-make-your-own-copy-of-a-repository-"}),"So you want to make your own copy of a repository, let's make a copy of the one that we cloned in the example above,  ",(0,o.jsx)(t.a,{href:"https://github.com/4GeeksAcademy/react-flask-hello",children:"4Geeks react-flask-hello"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#the-steps-to-fork-the-repository-are-the-following"}),"The steps to fork the repository are the following:"]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Go to the GitHub repository  ",(0,o.jsx)(t.a,{href:"https://github.com/4GeeksAcademy/react-flask-hello",children:"4Geeks react-flask-hello"})]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Click the  ",(0,o.jsx)(t.strong,{children:"Fork"}),"  button located in the top right corner of the page"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#fork-steps-2"}),(0,o.jsx)(t.img,{src:"https://i.imgur.com/0qzfYg0.png?raw=true",alt:"Fork Steps 2"})]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Then, an owner must be selected for the forked repository by clicking the  ",(0,o.jsx)(t.strong,{children:"Select an owner"}),"  button and choosing the  ",(0,o.jsx)(t.strong,{children:"Repository name"}),". You can also add a description (optional) to your fork if desired."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#fork-steps-3"}),(0,o.jsx)(t.img,{src:"https://imgur.com/4gqX7LM.png?raw=true",alt:"Fork Steps 3"})]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Below the description field, there is a checkbox (",(0,o.jsxs)(t.strong,{children:["Copy the  ",(0,o.jsx)(t.code,{children:"main"}),"  branch only"]}),") that allows you to only copy the main branch, if you want to copy the whole repository with all of its branches, then this box should be unmarked."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#fork-steps-4"}),(0,o.jsx)(t.img,{src:"https://imgur.com/8CRRVxR.png?raw=true",alt:"Fork Steps 4"})]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["You can now click  ",(0,o.jsx)(t.strong,{children:"Create Fork"}),"  and it'll be done"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#fork-steps-5"}),(0,o.jsx)(t.img,{src:"https://i.imgur.com/sm1x81i.png?raw=true",alt:"Fork Steps 5"})]}),"\n",(0,o.jsxs)(t.h2,{id:"how-to-clone-using-the-github-app-instead-of-the-terminal",children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#how-to-clone-using-the-github-app-instead-of-the-terminal"}),"How to clone using the GitHub app instead of the terminal"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#you-can-also-use-the-github-desktop-app-to-clone-a"}),"You can also use the GitHub Desktop App to clone a repository to your computer, once you have downloaded the  ",(0,o.jsx)(t.strong,{children:"GitHub Desktop App"}),"  ",(0,o.jsx)(t.a,{href:"https://desktop.github.com/",children:"here"}),", and being signed to the GitHub website and Desktop App, then you can follow these steps:"]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["Go to the desired GitHub repository, and let's use the  ",(0,o.jsx)(t.a,{href:"https://github.com/4GeeksAcademy/react-flask-hello",children:"4Geeks react-flask-hello"}),"  repo again. Click on the  ",(0,o.jsx)(t.strong,{children:"Code"}),"  button to display the options and proceed to click the  ",(0,o.jsx)(t.strong,{children:"Open with GitHub Desktop"}),"  button."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#github-app-steps-1"}),(0,o.jsx)(t.img,{src:"https://i.imgur.com/KPFvgCO.png?raw=true",alt:"GitHub App Steps 1"})]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["The GitHub Desktop App will automatically open on your computer and a window called  ",(0,o.jsx)(t.strong,{children:"Clone a repository"}),"  will be displayed. Here you can confirm the repository to be cloned, and you can change the local path where the repository will be saved by clicking the  ",(0,o.jsx)(t.strong,{children:"Choose..."}),"  button, or you can just copy the path and paste it into the corresponding field."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#github-app-steps-2"}),(0,o.jsx)(t.img,{src:"https://i.imgur.com/mMS54sJ.png?raw=true",alt:"GitHub App Steps 2"})]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["You can now proceed to click the  ",(0,o.jsx)(t.strong,{children:"Clone"}),"  button and the repository will be cloned in the desired path/directory"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://4geeks.com/how-to/github-clone-repository#github-app-steps-3"}),(0,o.jsx)(t.img,{src:"https://i.imgur.com/UVc92fA.png?raw=true",alt:"GitHub App Steps 3"})]}),"\n",(0,o.jsx)(t.h2,{id:"concepts-explained-with-analogies",children:"Concepts Explained with Analogies"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Forking"}),(0,o.jsx)(t.br,{}),"\n","Analogy: Making your own photocopy of a published recipe so you can tweak ingredients without altering the original.",(0,o.jsx)(t.br,{}),"\n","Technical: Forking creates a server-side clone under your account, letting you push freely while preserving a link to the upstream repository."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Cherry-Picking / Moving Commits"}),(0,o.jsx)(t.br,{}),"\n","Analogy: Picking just the ripest cherries from a bunch without taking the whole branch of fruit.",(0,o.jsx)(t.br,{}),"\n","Technical:  ",(0,o.jsx)(t.code,{children:"git cherry-pick <commit>"}),"  applies a single commit from another branch to your current branch; moving commits can also use  ",(0,o.jsx)(t.code,{children:"git reset"}),"  and branch manipulation to relocate work."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Tagging & Releases (Semantic Versioning)"}),(0,o.jsx)(t.br,{}),"\n","Analogy: Marking milestone flags along a hiking trail indicating difficulty and distance covered.",(0,o.jsx)(t.br,{}),"\n","Technical: Git tags label commits (e.g.,  ",(0,o.jsx)(t.code,{children:"v1.2.0"}),") following MAJOR.MINOR.PATCH rules; releases bundle tags with release notes on GitHub."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Git CLI (Advanced Commands)"}),(0,o.jsx)(t.br,{}),"\n","Analogy: A Swiss Army knife with specialized tools for crafting and reshaping your project history.",(0,o.jsx)(t.br,{}),"\n","Technical: Commands like  ",(0,o.jsx)(t.code,{children:"git rebase"}),",  ",(0,o.jsx)(t.code,{children:"git reset"}),", and  ",(0,o.jsx)(t.code,{children:"git rebase -i"}),"  let you rewrite and organize commits for a clean history."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"GitHub CLI (Remote Repo Management)"}),(0,o.jsx)(t.br,{}),"\n","Analogy: A remote control that operates GitHub features without opening a browser.",(0,o.jsx)(t.br,{}),"\n","Technical: The  ",(0,o.jsx)(t.code,{children:"gh"}),"  tool lets you fork repos, create pull requests, manage releases, and sync forks directly from the terminal."]}),"\n",(0,o.jsx)(t.h2,{id:"step-by-step-guided-walkthrough",children:"Step-by-Step Guided Walkthrough"}),"\n",(0,o.jsx)(t.h2,{id:"step-1-fork-and-clone-the-repository",children:"Step 1: Fork and Clone the Repository"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"#Fork upstream to your account\ngh repo fork DataVizJS/DataVizJS --clone=true --remote=true\ncd DataVizJS\n#Verify remotes\ngit remote -v\n#origin \u2192 your fork, upstream \u2192 original\n"})}),"\n",(0,o.jsx)(t.h2,{id:"step-2-apply-a-bug-fix-via-cherry-pick",children:"Step 2: Apply a Bug Fix via Cherry-Pick"}),"\n",(0,o.jsxs)(t.p,{children:["Sam\u2019s colleague published a fix in  ",(0,o.jsx)(t.code,{children:"bugfix/ui-glitch"}),"  on upstream."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"#Fetch upstream branches\ngit fetch upstream\n#Create a local branch for the fix\ngit checkout -b fix/ui-glitch upstream/bugfix/ui-glitch\n#Cherry-pick the specific commit\ngit cherry-pick a1b2c3d4           # applies only the UI glitch fix\n#Resolve any conflicts, then:\ngit push -u origin fix/ui-glitch\n"})}),"\n",(0,o.jsx)(t.h2,{id:"step-3-create-a-pull-request-upstream",children:"Step 3: Create a Pull Request Upstream"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'gh pr create \\\n  --base main \\\n  --head your-username:fix/ui-glitch \\\n  --title "fix: resolve UI rendering glitch" \\\n  --body "Cherry-picked the upstream bugfix to correct chart rendering on mobile."\n'})}),"\n",(0,o.jsx)(t.h2,{id:"step-4-synchronize-your-fork-with-upstream",children:"Step 4: Synchronize Your Fork with Upstream"}),"\n",(0,o.jsx)(t.p,{children:"After upstream merges additional features, keep your fork up to date:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"git fetch upstream\ngit checkout main\ngit merge --ff-only upstream/main    # fast-forward if no local commits\ngit push                             # update your fork\n"})}),"\n",(0,o.jsx)(t.h2,{id:"step-5-tagging-a-new-release-and-creating-github-release",children:"Step 5: Tagging a New Release and Creating GitHub Release"}),"\n",(0,o.jsxs)(t.p,{children:["Sam wants to publish version  ",(0,o.jsx)(t.code,{children:"v1.2.1-patch"}),"  of their fork:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'git checkout main\ngit pull\ngit tag -a v1.2.1-patch -m "patch: fix UI glitch backport"\ngit push origin v1.2.1-patch         # push tag only\n#Create a GitHub release\ngh release create v1.2.1-patch \\\n  --title "v1.2.1-patch" \\\n  --notes "Backported UI glitch fix via cherry-pick from upstream commit a1b2c3d4."\n'})}),"\n",(0,o.jsx)(t.h2,{id:"step-6-advanced-history-editing-optional",children:"Step 6: Advanced History Editing (Optional)"}),"\n",(0,o.jsx)(t.p,{children:"If Sam wants to clean up multiple fix branches before tagging:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'#Interactive rebase to squash commits\ngit checkout fix/ui-glitch\ngit rebase -i main\n#In editor, squash multiple cherry-pick commits into one\ngit checkout main\ngit merge --squash fix/ui-glitch   # combine without merge commit\ngit commit -m "fix: backport UI glitch in single commit"\n'})}),"\n",(0,o.jsx)(t.h2,{id:"best-practices-and-tips",children:"Best Practices and Tips"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Name branches clearly (",(0,o.jsx)(t.code,{children:"fix/"}),",  ",(0,o.jsx)(t.code,{children:"feature/"}),",  ",(0,o.jsx)(t.code,{children:"chore/"}),") to reflect intent."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:["Use  ",(0,o.jsx)(t.code,{children:"git fetch"}),"  +  ",(0,o.jsx)(t.code,{children:"git merge --ff-only"}),"  to keep fork history linear."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Cherry-pick sparingly; prefer full-feature-branch merges unless isolating urgent fixes."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Follow semantic versioning strictly-increment PATCH for bug fixes, MINOR for features, MAJOR for breaking changes."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Automate PRs and releases via GitHub CLI scripts in CI workflows."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"real-world-application-and-extension",children:"Real-World Application and Extension"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Integrate your GitHub CLI commands into CI pipelines to auto-sync forks and draft releases."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Use Dependabot on your fork to get vulnerability alerts on dependencies."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Publish GitHub Actions from your forked repo to standardize workflows across teams."}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},4146:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(4700);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4413],{4318:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(4700);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},9685:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"System Design & Architecture/Backend/Module Breakdown/Notifications","title":"Notifications","description":"Facilitates sending, managing, and processing course invitations, leveraging role-based permissions and SMTP for reliable email delivery.","source":"@site/docs/System Design & Architecture/Backend/4. Module Breakdown/5. Notifications.md","sourceDirName":"System Design & Architecture/Backend/4. Module Breakdown","slug":"/System Design & Architecture/Backend/Module Breakdown/Notifications","permalink":"/vibe/docs/System Design & Architecture/Backend/Module Breakdown/Notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/continuousactivelearning/vibe/edit/main/docs/docs/System Design & Architecture/Backend/4. Module Breakdown/5. Notifications.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GenAI","permalink":"/vibe/docs/System Design & Architecture/Backend/Module Breakdown/GenAI"},"next":{"title":"Quizzes","permalink":"/vibe/docs/System Design & Architecture/Backend/Module Breakdown/Quizzes"}}');var t=i(7968),r=i(4318);const o={},c=void 0,l={},d=[{value:"\ud83d\uddc2\ufe0f Folder Structure",id:"\ufe0f-folder-structure",level:3},{value:"\ud83c\udfaf Core Responsibilities",id:"-core-responsibilities",level:3},{value:"\ud83d\udd01 Workflow",id:"-workflow",level:3}];function a(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Facilitates sending, managing, and processing course invitations, leveraging role-based permissions and SMTP for reliable email delivery."}),"\n",(0,t.jsx)(n.h3,{id:"\ufe0f-folder-structure",children:"\ud83d\uddc2\ufe0f Folder Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"notifications/\n\u251c\u2500\u2500 controllers/\n\u2502   \u2514\u2500\u2500 InviteController.ts      # Endpoints to create, view, process, resend, and cancel invites\n\u251c\u2500\u2500 services/\n\u2502   \u251c\u2500\u2500 InviteService.ts         # Business logic for invite lifecycle and persistence\n\u2502   \u2514\u2500\u2500 MailService.ts           # Composes and sends invitation emails via SMTP\n\u251c\u2500\u2500 classes/\n\u2502   \u2514\u2500\u2500 validators/              # DTOs for invite creation and processing\n\u251c\u2500\u2500 abilities/                   # CASL policies for invite permissions\n\u251c\u2500\u2500 types.ts                     # Inversify DI tokens\n\u2514\u2500\u2500 container.ts                 # Binds controllers, services, and repositories\n"})}),"\n",(0,t.jsx)(n.h3,{id:"-core-responsibilities",children:"\ud83c\udfaf Core Responsibilities"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Invitation Generation"}),": Validates roles and course context, then issues unique invite tokens linked to courseId and versionId."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Email Delivery"}),": ",(0,t.jsx)(n.code,{children:"MailService"})," formats HTML emails using configurable templates and sends via SMTP (using Nodemailer)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Invite Processing"}),": Web endpoint renders a redirect page or JSON response upon token consumption, guiding users to enrollment flows."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resend & Cancel"}),": Allows authorized users to resend pending invites or revoke them, updating invite status accordingly."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Permission Enforcement"}),": Uses CASL abilities to ensure only permitted roles (e.g., instructors, TAs) can invite, view, or manage invites."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-workflow",children:"\ud83d\udd01 Workflow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create Invites"}),": Authorized user submits a list of email addresses and roles; ",(0,t.jsx)(n.code,{children:"InviteController"})," delegates to ",(0,t.jsx)(n.code,{children:"InviteService"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Persist Invites"}),": ",(0,t.jsx)(n.code,{children:"InviteService"})," generates tokens, saves invite records via ",(0,t.jsx)(n.code,{children:"InviteRepository"}),", and calls ",(0,t.jsx)(n.code,{children:"MailService"})," to send emails."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Process Invitations"}),": Recipients click invite links; ",(0,t.jsx)(n.code,{children:"InviteController.processInvites"})," validates token, marks it consumed, and redirects to the front-end enrollment page."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manage Invites"}),": Instructors can view all invites for a course version, resend emails, or cancel pending invitations through dedicated endpoints."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);
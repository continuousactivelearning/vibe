"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7492],{5905:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Typescript/Decorators","title":"Decorators","description":"Topic 4: Decorators (Class, Method, Property, and Parameter Decorators with Examples)","source":"@site/newdocs/Typescript/12. Decorators.md","sourceDirName":"Typescript","slug":"/Typescript/Decorators","permalink":"/vibe/newdocs/Typescript/Decorators","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Typescript/12. Decorators.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{},"sidebar":"newSidebar","previous":{"title":"Mastering Loops in TypeScript","permalink":"/vibe/newdocs/Typescript/Mastering Loops/Mastering Loops in TypeScript"},"next":{"title":"Mastering Functions in TypeScript","permalink":"/vibe/newdocs/Typescript/Mastering Functions/Mastering Functions in TypeScript"}}');var t=r(7968),i=r(9880);const o={},a=void 0,l={},c=[{value:"1. Problem Statement",id:"1-problem-statement",level:2},{value:"SkyFleet\u2019s Delivery Drones Challenge",id:"skyfleets-delivery-drones-challenge",level:2},{value:"2. Learning Objectives",id:"2-learning-objectives",level:2},{value:"3. Concept Introduction with Analogy",id:"3-concept-introduction-with-analogy",level:2},{value:"Stickers on Luggage Analogy",id:"stickers-on-luggage-analogy",level:2},{value:"4. What Are Decorators?",id:"4-what-are-decorators",level:2},{value:"Decorator Function Signatures",id:"decorator-function-signatures",level:2},{value:"<strong>Where Can You Use Decorators?</strong>",id:"where-can-you-use-decorators",level:2},{value:"Decorator Factories",id:"decorator-factories",level:2},{value:"4. Step-by-Step Data Modeling",id:"4-step-by-step-data-modeling",level:2},{value:"5. Live Code Walkthrough",id:"5-live-code-walkthrough",level:2},{value:"Method Decorator: Adding Logging",id:"method-decorator-adding-logging",level:2},{value:"Property Decorator: Marking Priority Drones",id:"property-decorator-marking-priority-drones",level:2},{value:"Method Decorator: Timing Deliveries",id:"method-decorator-timing-deliveries",level:2},{value:"Parameter Decorator: Marking VIP Deliveries",id:"parameter-decorator-marking-vip-deliveries",level:2},{value:"6.Challenge",id:"6challenge",level:2},{value:"7. Quick Recap &amp; Key Takeaways",id:"7-quick-recap--key-takeaways",level:2},{value:"8. (Optional) Programmer\u2019s Workflow Checklist",id:"8-optional-programmers-workflow-checklist",level:2},{value:"9. Coming up next:",id:"9-coming-up-next",level:2}];function d(e){const n={br:"br",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Topic 4: Decorators (Class, Method, Property, and Parameter Decorators with Examples)"}),"\n",(0,t.jsx)(n.h2,{id:"1-problem-statement",children:"1. Problem Statement"}),"\n",(0,t.jsx)(n.h2,{id:"skyfleets-delivery-drones-challenge",children:"SkyFleet\u2019s Delivery Drones Challenge"}),"\n",(0,t.jsxs)(n.p,{children:["You\u2019re the lead engineer at  ",(0,t.jsx)(n.strong,{children:"SkyFleet"}),", managing a large fleet of autonomous delivery drones.",(0,t.jsx)(n.br,{}),"\n","Business is booming, but new requirements keep coming:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The  ",(0,t.jsx)(n.strong,{children:"compliance team"}),"  wants every drone to  ",(0,t.jsx)(n.strong,{children:"log its flight path"}),"  for audits."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The  ",(0,t.jsx)(n.strong,{children:"safety team"}),"  needs to  ",(0,t.jsx)(n.strong,{children:"mark certain drones as \u201cpriority\u201d"}),"  for extra security checks."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The  ",(0,t.jsx)(n.strong,{children:"analytics team"}),"  wants to  ",(0,t.jsx)(n.strong,{children:"measure how long each delivery takes"}),"  to optimize routes."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The  ",(0,t.jsx)(n.strong,{children:"customer team"}),"  wants to  ",(0,t.jsx)(n.strong,{children:"tag drones delivering to VIP customers"}),"  for special handling."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://i.postimg.cc/1XT0j7LG/day4-topic1.png",alt:"Drones challenge"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"The problem:"}),(0,t.jsx)(n.br,{}),"\n","How do you add these extra features to your drone classes and methods  ",(0,t.jsx)(n.strong,{children:"without cluttering or rewriting the core drone code"}),"  every time a new requirement appears?"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Expected outcome:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"A clean, reusable way to \u201cattach\u201d extra behaviors to drones, flights, or deliveries."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Maintainable code where core drone logic stays focused and unchanged."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The ability to add or remove features easily as business needs evolve."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"2-learning-objectives",children:"2. Learning Objectives"}),"\n",(0,t.jsx)(n.p,{children:"By the end of this tutorial, you will be able to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Understand what decorators are and why they are useful."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use class, method, property, and parameter decorators in TypeScript."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Apply decorators to add logging, tagging, timing, and marking to your drone management system."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"3-concept-introduction-with-analogy",children:"3. Concept Introduction with Analogy"}),"\n",(0,t.jsx)(n.h2,{id:"stickers-on-luggage-analogy",children:"Stickers on Luggage Analogy"}),"\n",(0,t.jsx)(n.p,{children:"Imagine each drone is like a suitcase at an airport:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["You can put  ",(0,t.jsx)(n.strong,{children:"stickers"}),"  on a suitcase to add information or instructions (e.g., \u201cFragile,\u201d \u201cPriority,\u201d \u201cScan for Security\u201d)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The sticker doesn\u2019t change what\u2019s inside the suitcase but changes how it\u2019s handled."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Decorators"}),"  in TypeScript are like these stickers:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You can \u201cstick\u201d extra instructions or behaviors onto classes, methods, or properties."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The main drone code stays clean, but you can easily add or remove features as needed."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:""}),"\n",(0,t.jsx)(n.h2,{id:"4-what-are-decorators",children:"4. What Are Decorators?"}),"\n",(0,t.jsxs)(n.p,{children:["A  ",(0,t.jsx)(n.strong,{children:"decorator"}),"  is a special function in TypeScript that can be attached to a class, method, property, or parameter to  ",(0,t.jsx)(n.strong,{children:"modify, extend, or annotate"}),"  its behavior at runtime."]}),"\n",(0,t.jsx)(n.h2,{id:"decorator-function-signatures",children:"Decorator Function Signatures"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Class Decorator:"})}),"\n",(0,t.jsx)(n.p,{children:"A class decorator is a function applied to the constructor of a class. It can observe, modify, or even replace the class definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function MyClassDecorator(target: Function) { ... }\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"What can you do?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Add metadata to the class."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Replace or extend the class."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Log when a class is created."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Method Decorator:"}),"\nA method decorator is applied to a method in a class. It can modify the method\u2019s behavior, add metadata, or wrap the method with extra logic."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function MyMethodDecorator(target: Object, propertyKey: string, descriptor: PropertyDescriptor) { ... }\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"target:"}),"  The class prototype for instance methods, or the constructor for static methods."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"propertyKey:"}),"  The name of the method."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"descriptor:"}),"  An object describing the method (can be used to replace or wrap the method)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"What can you do?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Log calls to the method."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Change how the method works (wrap/replace it)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Add metadata or validation."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Property Decorator:"}),"\nA property decorator is applied to a class property. It\u2019s mainly used to add metadata or modify how the property is handled"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function MyPropertyDecorator(target: Object, propertyKey: string) { ... }\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"target:"}),"  The prototype of the class for instance properties, or the constructor for static properties."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"propertyKey:"}),"  The name of the property."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"What can you do?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Add metadata to the property (e.g., mark as \u201cpriority\u201d)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Use with libraries/frameworks for validation or serialization."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter Decorator:"}),(0,t.jsx)(n.br,{}),"\n","A parameter decorator is applied to a parameter in a method\u2019s signature. It\u2019s typically used to add metadata about the parameter"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"   function MyParameterDecorator(target: Object, propertyKey: string | symbol, parameterIndex: number) { ... }\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"target:"}),"  The prototype of the class."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"propertyKey:"}),"  The name of the method."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"parameterIndex:"}),"  The index of the parameter in the method\u2019s parameter list."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"What can you do?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Mark parameters for validation or special handling."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Add metadata for frameworks or libraries."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"where-can-you-use-decorators",children:(0,t.jsx)(n.strong,{children:"Where Can You Use Decorators?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Class Decorator:"}),"  Alters or annotates the class itself."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Method Decorator:"}),"  Alters or wraps a method."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Property Decorator:"}),"  Adds metadata or changes property behavior."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter Decorator:"}),"  Adds metadata to a method parameter."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameter and property decorators"}),"  run first, then  ",(0,t.jsx)(n.strong,{children:"method/accessor decorators"}),", then  ",(0,t.jsx)(n.strong,{children:"class decorators"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"When stacking, decorators are applied from bottom to top (the decorator closest to the method/property runs first)."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"decorator-factories",children:"Decorator Factories"}),"\n",(0,t.jsx)(n.p,{children:"To pass arguments to a decorator, use a decorator factory-a function that returns the actual decorator."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'function Priority(level: string) {\nreturn function(target: any, propertyKey: string) {\n  Reflect.defineMetadata("priority", level, target, propertyKey);\n};\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-step-by-step-data-modeling",children:"4. Step-by-Step Data Modeling"}),"\n",(0,t.jsx)(n.p,{children:"Here\u2019s a basic drone class:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Drone {\n constructor(public id: string) {}\n\n deliverPackage(destination: string) {\n   console.log(`Drone ${this.id} delivering to ${destination}.`);\n }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"5-live-code-walkthrough",children:"5. Live Code Walkthrough"}),"\n",(0,t.jsx)(n.h2,{id:"method-decorator-adding-logging",children:"Method Decorator: Adding Logging"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function Log(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n const original = descriptor.value;\n descriptor.value = function (...args: any[]) {\n   console.log(`[LOG] ${propertyKey} called with:`, args);\n   return original.apply(this, args);\n };\n}\n\nclass DeliveryDrone extends Drone {\n @Log\n deliverPackage(destination: string) {\n   super.deliverPackage(destination);\n }\n}\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The  ",(0,t.jsx)(n.code,{children:"@Log"}),"  decorator adds a logging sticker to the  ",(0,t.jsx)(n.code,{children:"deliverPackage"}),"  method."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"property-decorator-marking-priority-drones",children:"Property Decorator: Marking Priority Drones"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'\nfunction Priority(target: any, propertyKey: string) {\n Reflect.defineMetadata("priority", true, target, propertyKey);\n}\n\nclass InspectionDrone extends Drone {\n @Priority\n needsExtraCheck: boolean = true;\n}\n\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The  ",(0,t.jsx)(n.code,{children:"@Priority"}),"  decorator sticks a \u201cpriority\u201d label on the  ",(0,t.jsx)(n.code,{children:"needsExtraCheck"}),"  property."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"method-decorator-timing-deliveries",children:"Method Decorator: Timing Deliveries"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function Timed(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n const original = descriptor.value;\n descriptor.value = function (...args: any[]) {\n   const start = Date.now();\n   const result = original.apply(this, args);\n   const end = Date.now();\n   console.log(`[TIMER] ${propertyKey} took ${end - start}ms`);\n   return result;\n };\n}\n\nclass AnalyticsDrone extends Drone {\n @Timed\n deliverPackage(destination: string) {\n   // Simulate delivery delay\n   for (let i = 0; i < 1e7; i++) {}\n   super.deliverPackage(destination);\n }\n}\n\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The  ",(0,t.jsx)(n.code,{children:"@Timed"}),"  decorator adds a sticker that measures how long the delivery takes."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"parameter-decorator-marking-vip-deliveries",children:"Parameter Decorator: Marking VIP Deliveries"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function MarkVIP(target: any, propertyKey: string, parameterIndex: number) {\n // Could attach metadata or validation for VIP deliveries\n}\n\nclass CustomerDrone extends Drone {\n deliverPackage(@MarkVIP destination: string) {\n   super.deliverPackage(destination);\n }\n}\n\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The  ",(0,t.jsx)(n.code,{children:"@MarkVIP"}),"  decorator tags the delivery destination parameter as VIP."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"6challenge",children:"6.Challenge"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Your Turn!"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Write a  ",(0,t.jsx)(n.code,{children:"@Audit"}),"  class decorator that logs when a drone instance is created."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Apply it to a new  ",(0,t.jsx)(n.code,{children:"AuditDrone"}),"  class."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"7-quick-recap--key-takeaways",children:"7. Quick Recap & Key Takeaways"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Decorators are like stickers that add behavior or metadata to classes, methods, properties, or parameters."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"They help keep core code clean and focused."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You can easily add or remove features as business needs change."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"8-optional-programmers-workflow-checklist",children:"8. (Optional) Programmer\u2019s Workflow Checklist"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Identify repeated or cross-cutting behaviors (logging, tagging, timing)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Write decorators encapsulating those behaviors."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Apply decorators to classes, methods, or properties as needed."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Keep your core classes focused on their primary responsibilities."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"9-coming-up-next",children:"9. Coming up next:"}),"\n",(0,t.jsxs)(n.p,{children:["Explore  ",(0,t.jsx)(n.strong,{children:"Design Patterns"}),"!",(0,t.jsx)(n.br,{}),"\n","Learn how to organize your drone fleet\u2019s code with proven blueprints like Singleton (one control tower), Factory (building new drones), Observer (tracking deliveries), and Strategy (choosing the best delivery route)."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},9880:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(4700);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
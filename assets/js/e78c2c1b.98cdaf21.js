"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3324],{2150:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"Mongo DB/CRUD Operations","title":"CRUD Operations","description":"CRUD Operations: insertOne, find, updateOne, deleteOne.","source":"@site/newdocs/Mongo DB/CRUD Operations.md","sourceDirName":"Mongo DB","slug":"/Mongo DB/CRUD Operations","permalink":"/vibe/newdocs/Mongo DB/CRUD Operations","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/\u2026/newdocs/Mongo DB/CRUD Operations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"newSidebar","previous":{"title":"Aggregation Framework","permalink":"/vibe/newdocs/Mongo DB/Aggregation Framework"},"next":{"title":"Transactions","permalink":"/vibe/newdocs/Mongo DB/Transactions"}}');var i=s(7968),d=s(4318);const t={},c=void 0,l={},o=[{value:"1. Problem Statement",id:"1-problem-statement",level:2},{value:"<strong>Case Study: FastBite Food Delivery</strong>",id:"case-study-fastbite-food-delivery",level:2},{value:"2. Learning Objectives",id:"2-learning-objectives",level:2},{value:"3. Concept Introduction with Analogy",id:"3-concept-introduction-with-analogy",level:2},{value:"<strong>Analogy: The Restaurant Order Board</strong>",id:"analogy-the-restaurant-order-board",level:2},{value:"4. Technical Deep Dive",id:"4-technical-deep-dive",level:2},{value:"<strong>A. MongoDB CRUD Basics</strong>",id:"a-mongodb-crud-basics",level:2},{value:"<strong>B.  <code>insertOne</code>: Adding Products</strong>",id:"b--insertone-adding-products",level:2},{value:"<strong>C.  <code>find</code>: Querying Products</strong>",id:"c--find-querying-products",level:2},{value:"<strong>D.  <code>updateOne</code>: Modifying Products</strong>",id:"d--updateone-modifying-products",level:2},{value:"<strong>E.  <code>deleteOne</code>: Removing Products</strong>",id:"e--deleteone-removing-products",level:2},{value:"5. Step-by-Step Code Walkthrough",id:"5-step-by-step-code-walkthrough",level:2},{value:"<strong>A. Define the Product Schema</strong>",id:"a-define-the-product-schema",level:2},{value:"<strong>B. Insert a New Product</strong>",id:"b-insert-a-new-product",level:2},{value:"<strong>C. Query Products</strong>",id:"c-query-products",level:2},{value:"<strong>D. Update Product Stock</strong>",id:"d-update-product-stock",level:2},{value:"<strong>E. Delete a Discontinued Product</strong>",id:"e-delete-a-discontinued-product",level:2},{value:"6. Interactive Challenge / Mini-Project",id:"6-interactive-challenge--mini-project",level:2},{value:"7. Common Pitfalls &amp; Best Practices",id:"7-common-pitfalls--best-practices",level:2},{value:"8. Optional: Programmer\u2019s Workflow Checklist",id:"8-optional-programmers-workflow-checklist",level:2}];function a(e){const n={br:"br",code:"code",h2:"h2",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"CRUD Operations: insertOne, find, updateOne, deleteOne."}),"\n",(0,i.jsx)(n.h2,{id:"1-problem-statement",children:"1. Problem Statement"}),"\n",(0,i.jsx)(n.h2,{id:"case-study-fastbite-food-delivery",children:(0,i.jsx)(n.strong,{children:"Case Study: FastBite Food Delivery"})}),"\n",(0,i.jsx)(n.p,{children:"FastBite is building a scalable backend for managing restaurant menus and customer orders:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"New dishes are added and removed daily as menus change."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Customers need to search for dishes by cuisine, price, or dietary tags."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Prices and availability change frequently\u2014updates must be fast and reliable."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Orders and menu items must be deleted or archived when restaurants close or dishes are discontinued."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://i.postimg.cc/d0vxnv06/react2.png",alt:"Sample Image"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"The challenge:"}),(0,i.jsx)(n.br,{}),"\n","How do you ensure the system can efficiently create, read, update, and delete menu and order data, while maintaining data integrity and performance as the business grows?"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-learning-objectives",children:"2. Learning Objectives"}),"\n",(0,i.jsx)(n.p,{children:"By the end of this tutorial, you will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Understand the role and guarantees of CRUD operations in MongoDB."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use  ",(0,i.jsx)(n.code,{children:"insertOne"}),"  to add new documents to a collection."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use  ",(0,i.jsx)(n.code,{children:"find"}),"  with advanced queries, projections, and sorting to retrieve documents."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use  ",(0,i.jsx)(n.code,{children:"updateOne"}),"  with operators to modify documents safely and atomically."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use  ",(0,i.jsx)(n.code,{children:"deleteOne"}),"  to remove documents, understanding the importance of filters and atomicity."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Apply best practices for data modeling, error handling, and performance."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-concept-introduction-with-analogy",children:"3. Concept Introduction with Analogy"}),"\n",(0,i.jsx)(n.h2,{id:"analogy-the-restaurant-order-board",children:(0,i.jsx)(n.strong,{children:"Analogy: The Restaurant Order Board"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"insertOne"}),": Like a chef pinning a new dish to the kitchen\u2019s order board."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"find"}),": Scanning the board for all \u201cVegan\u201d or \u201cUnder $10\u201d dishes."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"updateOne"}),": The manager changes the price or marks a dish as \u201cout of stock.\u201d"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"deleteOne"}),": Removing a discontinued dish from the board."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"MongoDB\u2019s CRUD operations are your digital tools for managing this ever-changing board\u2014instantly, reliably, and at scale."})}),"\n",(0,i.jsx)(n.h2,{id:"4-technical-deep-dive",children:"4. Technical Deep Dive"}),"\n",(0,i.jsx)(n.h2,{id:"a-mongodb-crud-basics",children:(0,i.jsx)(n.strong,{children:"A. MongoDB CRUD Basics"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Atomicity"}),": Each operation is atomic at the document level."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Document Structure"}),": Flexible schema allows nested fields (e.g.,  ",(0,i.jsx)(n.code,{children:"price.currency"}),",  ",(0,i.jsx)(n.code,{children:"price.value"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Indexes"}),": Improve query performance (e.g., indexing  ",(0,i.jsx)(n.code,{children:"category"}),"  or  ",(0,i.jsx)(n.code,{children:"price"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"b--insertone-adding-products",children:(0,i.jsxs)(n.strong,{children:["B.  ",(0,i.jsx)(n.code,{children:"insertOne"}),": Adding Products"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Add a single document to a collection."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.products.insertOne({  \n  name: "Wireless Headphones",  \n  category: "Electronics",  \n  price: { value: 99.99, currency: "USD" },  \n  stock: 50,  \n  ratings: [4.5, 4.7, 4.8]  \n});  \n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Notes"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["MongoDB auto-generates a unique  ",(0,i.jsx)(n.code,{children:"_id"}),"  (primary key) if not provided."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Returns an  ",(0,i.jsx)(n.code,{children:"acknowledged: true"}),"  and the inserted  ",(0,i.jsx)(n.code,{children:"_id"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"c--find-querying-products",children:(0,i.jsxs)(n.strong,{children:["C.  ",(0,i.jsx)(n.code,{children:"find"}),": Querying Products"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Retrieve documents matching criteria."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// Find all electronics in stock  \ndb.products.find({  \n  category: "Electronics",  \n  stock: { $gt: 0 }  \n});  \n\n// Projection: Include only name and price  \ndb.products.find(  \n  { category: "Electronics" },  \n  { name: 1, price: 1, _id: 0 }  \n);  \n\n// Sorting: Highest price first  \ndb.products.find().sort({ "price.value": -1 });  \n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Operators"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Comparison"}),":  ",(0,i.jsx)(n.code,{children:"$eq"}),",  ",(0,i.jsx)(n.code,{children:"$gt"}),",  ",(0,i.jsx)(n.code,{children:"$lt"}),",  ",(0,i.jsx)(n.code,{children:"$in"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logical"}),":  ",(0,i.jsx)(n.code,{children:"$and"}),",  ",(0,i.jsx)(n.code,{children:"$or"}),",  ",(0,i.jsx)(n.code,{children:"$not"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Array"}),":  ",(0,i.jsx)(n.code,{children:"$elemMatch"}),",  ",(0,i.jsx)(n.code,{children:"$size"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"d--updateone-modifying-products",children:(0,i.jsxs)(n.strong,{children:["D.  ",(0,i.jsx)(n.code,{children:"updateOne"}),": Modifying Products"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Update a single document matching a filter."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// Update stock quantity for a product  \ndb.products.updateOne(  \n  { _id: ObjectId("...") },  \n  { $set: { stock: 45 } }  \n);  \n\n// Increment stock by 10  \ndb.products.updateOne(  \n  { name: "Wireless Headphones" },  \n  { $inc: { stock: 10 } }  \n);  \n\n// Add a new field (e.g., discount)  \ndb.products.updateOne(  \n  { _id: ObjectId("...") },  \n  { $set: { "price.discount": 15 } }  \n);  \n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Notes"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Use  ",(0,i.jsx)(n.code,{children:"$set"}),",  ",(0,i.jsx)(n.code,{children:"$inc"}),",  ",(0,i.jsx)(n.code,{children:"$push"}),"  (for arrays) to avoid overwriting the entire document."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Always include a filter to prevent accidental updates."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"e--deleteone-removing-products",children:(0,i.jsxs)(n.strong,{children:["E.  ",(0,i.jsx)(n.code,{children:"deleteOne"}),": Removing Products"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Delete a single document matching a filter."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// Delete a discontinued product  \ndb.products.deleteOne({  \n  _id: ObjectId("...")  \n});  \n\n// Delete by name (ensure uniqueness first)  \ndb.products.deleteOne({  \n  name: "Outdated Model XYZ"  \n});  \n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Notes"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Use precise filters to avoid accidental deletions."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Consider archiving instead of deleting for historical data."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-step-by-step-code-walkthrough",children:"5. Step-by-Step Code Walkthrough"}),"\n",(0,i.jsx)(n.h2,{id:"a-define-the-product-schema",children:(0,i.jsx)(n.strong,{children:"A. Define the Product Schema"})}),"\n",(0,i.jsx)(n.p,{children:"// Sample product document"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{  \n  _id: ObjectId("665f4d7e8b3e6c1e24a7b3e1"),  \n  name: "Smartwatch Pro",  \n  category: "Wearables",  \n  price: { value: 199.99, currency: "USD", discount: 20 },  \n  stock: 25,  \n  ratings: [4.6, 4.8],  \n  tags: ["fitness", "bluetooth"]  \n}  \n'})}),"\n",(0,i.jsx)(n.h2,{id:"b-insert-a-new-product",children:(0,i.jsx)(n.strong,{children:"B. Insert a New Product"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.products.insertOne({  \n  name: "4K Smart TV",  \n  category: "Electronics",  \n  price: { value: 599.99, currency: "USD" },  \n  stock: 10,  \n  tags: ["television", "streaming"]  \n});  \n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{  \n  acknowledged: true,  \n  insertedId: ObjectId("665f4d7e8b3e6c1e24a7b3e2")  \n}  \n'})}),"\n",(0,i.jsx)(n.h2,{id:"c-query-products",children:(0,i.jsx)(n.strong,{children:"C. Query Products"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// Find all TVs under $600  \ndb.products.find({  \n  category: "Electronics",  \n  "price.value": { $lt: 600 },  \n  name: /TV/i  \n});  \n\n// Project name and price only  \ndb.products.find(  \n  { category: "Electronics" },  \n  { name: 1, "price.value": 1, _id: 0 }  \n);  \n'})}),"\n",(0,i.jsx)(n.h2,{id:"d-update-product-stock",children:(0,i.jsx)(n.strong,{children:"D. Update Product Stock"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'// Reduce stock by 1 when purchased  \ndb.products.updateOne(  \n  { _id: ObjectId("665f4d7e8b3e6c1e24a7b3e2") },  \n  { $inc: { stock: -1 } }  \n);  \n\n// Add a "sale" tag  \ndb.products.updateOne(  \n  { name: "4K Smart TV" },  \n  { $push: { tags: "sale" } }  \n);  \n'})}),"\n",(0,i.jsx)(n.h2,{id:"e-delete-a-discontinued-product",children:(0,i.jsx)(n.strong,{children:"E. Delete a Discontinued Product"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'db.products.deleteOne({  \n  name: "Legacy DVD Player"  \n});  \n'})}),"\n",(0,i.jsx)(n.h2,{id:"6-interactive-challenge--mini-project",children:"6. Interactive Challenge / Mini-Project"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Your Turn!"})}),"\n",(0,i.jsx)(n.p,{children:"You\u2019re managing FastBite\u2019s menu database. Complete these tasks using MongoDB CRUD operations:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Add a new vegan dish"}),"  called \u201cTofu Buddha Bowl\u201d (cuisine: \u201cAsian\u201d, price: $9.50, tags: [\u201cvegan\u201d, \u201cgluten-free\u201d], available: true)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Find all available vegan dishes"}),"  under $12, showing only their name and price."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Update the price"}),"  of \u201cTofu Buddha Bowl\u201d to $10.00 and add a \u201cpopular\u201d tag."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Delete"}),"  the dish \u201cOld Special Soup\u201d from the menu."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"7-common-pitfalls--best-practices",children:"7. Common Pitfalls & Best Practices"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Pitfall"}),(0,i.jsx)(n.th,{children:"Best Practice"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Using update without operators"}),(0,i.jsxs)(n.td,{children:["Always use ",(0,i.jsx)(n.code,{children:"$set"}),", ",(0,i.jsx)(n.code,{children:"$inc"}),", etc., not raw objects"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Broad delete filters"}),(0,i.jsx)(n.td,{children:"Use unique identifiers or strict filters"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"No projection in find"}),(0,i.jsx)(n.td,{children:"Only return needed fields"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Ignoring atomicity"}),(0,i.jsx)(n.td,{children:"Remember: each operation is atomic per document"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"No error handling"}),(0,i.jsx)(n.td,{children:"Always check results and handle errors"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"8-optional-programmers-workflow-checklist",children:"8. Optional: Programmer\u2019s Workflow Checklist"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Validate input before insert/update."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Use projections in queries to limit returned fields."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Test update/delete filters with  ",(0,i.jsx)(n.code,{children:"find"}),"  before running."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Use unique identifiers for critical updates/deletes."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Handle errors and check operation results."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},4318:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var r=s(4700);const i={},d=r.createContext(i);function t(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);